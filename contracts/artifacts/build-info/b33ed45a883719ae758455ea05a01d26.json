{
	"id": "b33ed45a883719ae758455ea05a01d26",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/3_Ballot.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\n/** \n * @title Ballot\n * @dev Implements voting process along with vote delegation\n */\ncontract Ballot {\n   \n    struct Voter {\n        uint weight; // weight is accumulated by delegation\n        bool voted;  // if true, that person already voted\n        address delegate; // person delegated to\n        uint vote;   // index of the voted proposal\n    }\n\n    struct Proposal {\n        // If you can limit the length to a certain number of bytes, \n        // always use one of bytes1 to bytes32 because they are much cheaper\n        bytes32 name;   // short name (up to 32 bytes)\n        uint voteCount; // number of accumulated votes\n    }\n\n    address public chairperson;\n\n    mapping(address => Voter) public voters;\n\n    Proposal[] public proposals;\n\n    /** \n     * @dev Create a new ballot to choose one of 'proposalNames'.\n     * @param proposalNames names of proposals\n     */\n    constructor(bytes32[] memory proposalNames) {\n        chairperson = msg.sender;\n        voters[chairperson].weight = 1;\n\n        for (uint i = 0; i < proposalNames.length; i++) {\n            // 'Proposal({...})' creates a temporary\n            // Proposal object and 'proposals.push(...)'\n            // appends it to the end of 'proposals'.\n            proposals.push(Proposal({\n                name: proposalNames[i],\n                voteCount: 0\n            }));\n        }\n    }\n    \n    /** \n     * @dev Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.\n     * @param voter address of voter\n     */\n    function giveRightToVote(address voter) public {\n        require(\n            msg.sender == chairperson,\n            \"Only chairperson can give right to vote.\"\n        );\n        require(\n            !voters[voter].voted,\n            \"The voter already voted.\"\n        );\n        require(voters[voter].weight == 0);\n        voters[voter].weight = 1;\n    }\n\n    /**\n     * @dev Delegate your vote to the voter 'to'.\n     * @param to address to which vote is delegated\n     */\n    function delegate(address to) public {\n        Voter storage sender = voters[msg.sender];\n        require(!sender.voted, \"You already voted.\");\n        require(to != msg.sender, \"Self-delegation is disallowed.\");\n\n        while (voters[to].delegate != address(0)) {\n            to = voters[to].delegate;\n\n            // We found a loop in the delegation, not allowed.\n            require(to != msg.sender, \"Found loop in delegation.\");\n        }\n        sender.voted = true;\n        sender.delegate = to;\n        Voter storage delegate_ = voters[to];\n        if (delegate_.voted) {\n            // If the delegate already voted,\n            // directly add to the number of votes\n            proposals[delegate_.vote].voteCount += sender.weight;\n        } else {\n            // If the delegate did not vote yet,\n            // add to her weight.\n            delegate_.weight += sender.weight;\n        }\n    }\n\n    /**\n     * @dev Give your vote (including votes delegated to you) to proposal 'proposals[proposal].name'.\n     * @param proposal index of proposal in the proposals array\n     */\n    function vote(uint proposal) public {\n        Voter storage sender = voters[msg.sender];\n        require(sender.weight != 0, \"Has no right to vote\");\n        require(!sender.voted, \"Already voted.\");\n        sender.voted = true;\n        sender.vote = proposal;\n\n        // If 'proposal' is out of the range of the array,\n        // this will throw automatically and revert all\n        // changes.\n        proposals[proposal].voteCount += sender.weight;\n    }\n\n    /** \n     * @dev Computes the winning proposal taking all previous votes into account.\n     * @return winningProposal_ index of winning proposal in the proposals array\n     */\n    function winningProposal() public view\n            returns (uint winningProposal_)\n    {\n        uint winningVoteCount = 0;\n        for (uint p = 0; p < proposals.length; p++) {\n            if (proposals[p].voteCount > winningVoteCount) {\n                winningVoteCount = proposals[p].voteCount;\n                winningProposal_ = p;\n            }\n        }\n    }\n\n    /** \n     * @dev Calls winningProposal() function to get the index of the winner contained in the proposals array and then\n     * @return winnerName_ the name of the winner\n     */\n    function winnerName() public view\n            returns (bytes32 winnerName_)\n    {\n        winnerName_ = proposals[winningProposal()].name;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/3_Ballot.sol": {
				"Ballot": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "proposalNames",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "chairperson",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "giveRightToVote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "voteCount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposal",
									"type": "uint256"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "voters",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "voted",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "vote",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnerName",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "winnerName_",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winningProposal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "winningProposal_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implements voting process along with vote delegation",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Create a new ballot to choose one of 'proposalNames'.",
								"params": {
									"proposalNames": "names of proposals"
								}
							},
							"delegate(address)": {
								"details": "Delegate your vote to the voter 'to'.",
								"params": {
									"to": "address to which vote is delegated"
								}
							},
							"giveRightToVote(address)": {
								"details": "Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.",
								"params": {
									"voter": "address of voter"
								}
							},
							"vote(uint256)": {
								"details": "Give your vote (including votes delegated to you) to proposal 'proposals[proposal].name'.",
								"params": {
									"proposal": "index of proposal in the proposals array"
								}
							},
							"winnerName()": {
								"details": "Calls winningProposal() function to get the index of the winner contained in the proposals array and then",
								"returns": {
									"winnerName_": "the name of the winner"
								}
							},
							"winningProposal()": {
								"details": "Computes the winning proposal taking all previous votes into account.",
								"returns": {
									"winningProposal_": "index of winning proposal in the proposals array"
								}
							}
						},
						"title": "Ballot",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/3_Ballot.sol\":157:4519  contract Ballot {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/3_Ballot.sol\":958:1439  constructor(bytes32[] memory proposalNames) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/3_Ballot.sol\":1012:1023  chairperson */\n  0x00\n    /* \"contracts/3_Ballot.sol\":1012:1036  chairperson = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/3_Ballot.sol\":1026:1036  msg.sender */\n  caller\n    /* \"contracts/3_Ballot.sol\":1012:1036  chairperson = msg.sender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/3_Ballot.sol\":1046:1065  voters[chairperson] */\n  dup2\n  mstore\n    /* \"contracts/3_Ballot.sol\":1012:1036  chairperson = msg.sender */\n  0x01\n    /* \"contracts/3_Ballot.sol\":1046:1065  voters[chairperson] */\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup3\n  keccak256\n    /* \"contracts/3_Ballot.sol\":1046:1076  voters[chairperson].weight = 1 */\n  sstore\n    /* \"contracts/3_Ballot.sol\":1087:1433  for (uint i = 0; i < proposalNames.length; i++) {... */\ntag_6:\n    /* \"contracts/3_Ballot.sol\":1108:1121  proposalNames */\n  dup2\n    /* \"contracts/3_Ballot.sol\":1108:1128  proposalNames.length */\n  mload\n    /* \"contracts/3_Ballot.sol\":1104:1105  i */\n  dup2\n    /* \"contracts/3_Ballot.sol\":1104:1128  i < proposalNames.length */\n  lt\n    /* \"contracts/3_Ballot.sol\":1087:1433  for (uint i = 0; i < proposalNames.length; i++) {... */\n  iszero\n  tag_7\n  jumpi\n    /* \"contracts/3_Ballot.sol\":1312:1321  proposals */\n  0x02\n    /* \"contracts/3_Ballot.sol\":1327:1421  Proposal({... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"contracts/3_Ballot.sol\":1360:1373  proposalNames */\n  dup5\n    /* \"contracts/3_Ballot.sol\":1374:1375  i */\n  dup5\n    /* \"contracts/3_Ballot.sol\":1360:1376  proposalNames[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_10\n  jumpi\n  tag_10\n  tag_11\n  jump\t// in\ntag_10:\n  0x20\n  swap1\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  dup2\n  add\n  mload\n    /* \"contracts/3_Ballot.sol\":1327:1421  Proposal({... */\n  dup3\n  mstore\n    /* \"contracts/3_Ballot.sol\":1405:1406  0 */\n  0x00\n    /* \"contracts/3_Ballot.sol\":1327:1421  Proposal({... */\n  swap2\n  dup2\n  add\n  dup3\n  swap1\n  mstore\n    /* \"contracts/3_Ballot.sol\":1312:1422  proposals.push(Proposal({... */\n  dup4\n  sload\n  0x01\n  dup2\n  dup2\n  add\n  dup7\n  sstore\n  swap5\n  dup4\n  mstore\n  swap2\n  dup2\n  swap1\n  keccak256\n  dup4\n  mload\n  0x02\n  swap1\n  swap4\n  mul\n  add\n  swap2\n  dup3\n  sstore\n  swap2\n  swap1\n  swap2\n  add\n  mload\n  swap2\n  add\n  sstore\n    /* \"contracts/3_Ballot.sol\":1130:1133  i++ */\n  dup1\n  tag_13\n  dup2\n  tag_14\n  jump\t// in\ntag_13:\n  swap2\n  pop\n  pop\n    /* \"contracts/3_Ballot.sol\":1087:1433  for (uint i = 0; i < proposalNames.length; i++) {... */\n  jump(tag_6)\ntag_7:\n  pop\n    /* \"contracts/3_Ballot.sol\":958:1439  constructor(bytes32[] memory proposalNames) {... */\n  pop\n    /* \"contracts/3_Ballot.sol\":157:4519  contract Ballot {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:1130   */\ntag_3:\n    /* \"#utility.yul\":109:115   */\n  0x00\n    /* \"#utility.yul\":140:142   */\n  0x20\n    /* \"#utility.yul\":183:185   */\n  dup1\n    /* \"#utility.yul\":171:180   */\n  dup4\n    /* \"#utility.yul\":162:169   */\n  dup6\n    /* \"#utility.yul\":158:181   */\n  sub\n    /* \"#utility.yul\":154:186   */\n  slt\n    /* \"#utility.yul\":151:203   */\n  iszero\n  tag_18\n  jumpi\n    /* \"#utility.yul\":199:200   */\n  0x00\n    /* \"#utility.yul\":196:197   */\n  dup1\n    /* \"#utility.yul\":189:201   */\n  revert\n    /* \"#utility.yul\":151:203   */\ntag_18:\n    /* \"#utility.yul\":226:242   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":291:305   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":288:322   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":318:319   */\n  0x00\n    /* \"#utility.yul\":315:316   */\n  dup1\n    /* \"#utility.yul\":308:320   */\n  revert\n    /* \"#utility.yul\":288:322   */\ntag_19:\n    /* \"#utility.yul\":356:362   */\n  dup2\n    /* \"#utility.yul\":345:354   */\n  dup6\n    /* \"#utility.yul\":341:363   */\n  add\n    /* \"#utility.yul\":331:363   */\n  swap2\n  pop\n    /* \"#utility.yul\":401:408   */\n  dup6\n    /* \"#utility.yul\":394:398   */\n  0x1f\n    /* \"#utility.yul\":390:392   */\n  dup4\n    /* \"#utility.yul\":386:399   */\n  add\n    /* \"#utility.yul\":382:409   */\n  slt\n    /* \"#utility.yul\":372:427   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":423:424   */\n  0x00\n    /* \"#utility.yul\":420:421   */\n  dup1\n    /* \"#utility.yul\":413:425   */\n  revert\n    /* \"#utility.yul\":372:427   */\ntag_20:\n    /* \"#utility.yul\":452:454   */\n  dup2\n    /* \"#utility.yul\":446:455   */\n  mload\n    /* \"#utility.yul\":474:476   */\n  dup2\n    /* \"#utility.yul\":470:472   */\n  dup2\n    /* \"#utility.yul\":467:477   */\n  gt\n    /* \"#utility.yul\":464:500   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":480:498   */\n  tag_22\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":526:528   */\n  dup1\n    /* \"#utility.yul\":523:524   */\n  0x05\n    /* \"#utility.yul\":519:529   */\n  shl\n    /* \"#utility.yul\":558:560   */\n  0x40\n    /* \"#utility.yul\":552:561   */\n  mload\n    /* \"#utility.yul\":621:623   */\n  0x1f\n    /* \"#utility.yul\":617:624   */\n  not\n    /* \"#utility.yul\":612:614   */\n  0x3f\n    /* \"#utility.yul\":608:610   */\n  dup4\n    /* \"#utility.yul\":604:615   */\n  add\n    /* \"#utility.yul\":600:625   */\n  and\n    /* \"#utility.yul\":592:598   */\n  dup2\n    /* \"#utility.yul\":588:626   */\n  add\n    /* \"#utility.yul\":676:682   */\n  dup2\n    /* \"#utility.yul\":664:674   */\n  dup2\n    /* \"#utility.yul\":661:683   */\n  lt\n    /* \"#utility.yul\":656:658   */\n  dup6\n    /* \"#utility.yul\":644:654   */\n  dup3\n    /* \"#utility.yul\":641:659   */\n  gt\n    /* \"#utility.yul\":638:684   */\n  or\n    /* \"#utility.yul\":635:707   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":687:705   */\n  tag_25\n  tag_23\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":723:725   */\n  0x40\n    /* \"#utility.yul\":716:738   */\n  mstore\n    /* \"#utility.yul\":773:791   */\n  dup3\n  dup2\n  mstore\n    /* \"#utility.yul\":807:822   */\n  dup6\n  dup2\n  add\n  swap4\n  pop\n    /* \"#utility.yul\":842:853   */\n  dup5\n  dup7\n  add\n    /* \"#utility.yul\":872:883   */\n  dup3\n  dup7\n  add\n    /* \"#utility.yul\":868:888   */\n  dup8\n  add\n    /* \"#utility.yul\":865:898   */\n  dup11\n  lt\n    /* \"#utility.yul\":862:915   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":911:912   */\n  0x00\n    /* \"#utility.yul\":908:909   */\n  dup1\n    /* \"#utility.yul\":901:913   */\n  revert\n    /* \"#utility.yul\":862:915   */\ntag_26:\n    /* \"#utility.yul\":933:934   */\n  0x00\n    /* \"#utility.yul\":924:934   */\n  swap6\n  pop\n    /* \"#utility.yul\":943:1099   */\ntag_27:\n    /* \"#utility.yul\":957:959   */\n  dup4\n    /* \"#utility.yul\":954:955   */\n  dup7\n    /* \"#utility.yul\":951:960   */\n  lt\n    /* \"#utility.yul\":943:1099   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1014:1024   */\n  dup1\n  mload\n    /* \"#utility.yul\":1002:1025   */\n  dup6\n  mstore\n    /* \"#utility.yul\":975:976   */\n  0x01\n    /* \"#utility.yul\":968:977   */\n  swap6\n  swap1\n  swap6\n  add\n  swap5\n    /* \"#utility.yul\":1045:1057   */\n  swap4\n  dup7\n  add\n  swap4\n    /* \"#utility.yul\":1077:1089   */\n  dup7\n  add\n    /* \"#utility.yul\":943:1099   */\n  jump(tag_27)\ntag_29:\n  pop\n    /* \"#utility.yul\":1118:1124   */\n  swap9\n    /* \"#utility.yul\":14:1130   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1135:1367   */\ntag_14:\n    /* \"#utility.yul\":1174:1177   */\n  0x00\n  not(0x00)\n    /* \"#utility.yul\":1195:1212   */\n  dup3\n  eq\n    /* \"#utility.yul\":1192:1332   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1254:1264   */\n  0x4e487b71\n    /* \"#utility.yul\":1249:1252   */\n  0xe0\n    /* \"#utility.yul\":1245:1265   */\n  shl\n    /* \"#utility.yul\":1242:1243   */\n  0x00\n    /* \"#utility.yul\":1235:1266   */\n  mstore\n    /* \"#utility.yul\":1289:1293   */\n  0x11\n    /* \"#utility.yul\":1286:1287   */\n  0x04\n    /* \"#utility.yul\":1279:1294   */\n  mstore\n    /* \"#utility.yul\":1317:1321   */\n  0x24\n    /* \"#utility.yul\":1314:1315   */\n  0x00\n    /* \"#utility.yul\":1307:1322   */\n  revert\n    /* \"#utility.yul\":1192:1332   */\ntag_31:\n  pop\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1348:1361   */\n  add\n  swap1\n    /* \"#utility.yul\":1135:1367   */\n  jump\t// out\n    /* \"#utility.yul\":1372:1499   */\ntag_11:\n    /* \"#utility.yul\":1433:1443   */\n  0x4e487b71\n    /* \"#utility.yul\":1428:1431   */\n  0xe0\n    /* \"#utility.yul\":1424:1444   */\n  shl\n    /* \"#utility.yul\":1421:1422   */\n  0x00\n    /* \"#utility.yul\":1414:1445   */\n  mstore\n    /* \"#utility.yul\":1464:1468   */\n  0x32\n    /* \"#utility.yul\":1461:1462   */\n  0x04\n    /* \"#utility.yul\":1454:1469   */\n  mstore\n    /* \"#utility.yul\":1488:1492   */\n  0x24\n    /* \"#utility.yul\":1485:1486   */\n  0x00\n    /* \"#utility.yul\":1478:1493   */\n  revert\n    /* \"#utility.yul\":1504:1631   */\ntag_23:\n    /* \"#utility.yul\":1565:1575   */\n  0x4e487b71\n    /* \"#utility.yul\":1560:1563   */\n  0xe0\n    /* \"#utility.yul\":1556:1576   */\n  shl\n    /* \"#utility.yul\":1553:1554   */\n  0x00\n    /* \"#utility.yul\":1546:1577   */\n  mstore\n    /* \"#utility.yul\":1596:1600   */\n  0x41\n    /* \"#utility.yul\":1593:1594   */\n  0x04\n    /* \"#utility.yul\":1586:1601   */\n  mstore\n    /* \"#utility.yul\":1620:1624   */\n  0x24\n    /* \"#utility.yul\":1617:1618   */\n  0x00\n    /* \"#utility.yul\":1610:1625   */\n  revert\n    /* \"#utility.yul\":1504:1631   */\ntag_16:\n    /* \"contracts/3_Ballot.sol\":157:4519  contract Ballot {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/3_Ballot.sol\":157:4519  contract Ballot {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x609ff1bd\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x609ff1bd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9e7b8d61\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa3ec138d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe2ba53f0\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x0121b93f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x013cf08b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e4176cf\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/3_Ballot.sol\":3173:3631  function vote(uint proposal) public {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/3_Ballot.sol\":794:821  Proposal[] public proposals */\n    tag_4:\n      tag_16\n      tag_17\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n    tag_16:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1054:1079   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1110:1112   */\n      0x20\n        /* \"#utility.yul\":1095:1113   */\n      dup4\n      add\n        /* \"#utility.yul\":1088:1122   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1027:1045   */\n      add\n        /* \"contracts/3_Ballot.sol\":794:821  Proposal[] public proposals */\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Ballot.sol\":715:741  address public chairperson */\n    tag_5:\n      sload(0x00)\n      tag_21\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_21:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":654:686   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":636:687   */\n      dup2\n      mstore\n        /* \"#utility.yul\":624:626   */\n      0x20\n        /* \"#utility.yul\":609:627   */\n      add\n        /* \"contracts/3_Ballot.sol\":715:741  address public chairperson */\n      tag_19\n        /* \"#utility.yul\":490:693   */\n      jump\n        /* \"contracts/3_Ballot.sol\":2078:2985  function delegate(address to) public {... */\n    tag_6:\n      tag_12\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n        /* \"contracts/3_Ballot.sol\":3817:4182  function winningProposal() public view... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":844:869   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":832:834   */\n      0x20\n        /* \"#utility.yul\":817:835   */\n      add\n        /* \"contracts/3_Ballot.sol\":3817:4182  function winningProposal() public view... */\n      tag_19\n        /* \"#utility.yul\":698:875   */\n      jump\n        /* \"contracts/3_Ballot.sol\":1599:1954  function giveRightToVote(address voter) public {... */\n    tag_8:\n      tag_12\n      tag_34\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n        /* \"contracts/3_Ballot.sol\":748:787  mapping(address => Voter) public voters */\n    tag_9:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_37:\n      0x01\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      swap2\n      dup2\n      add\n      sload\n      0x02\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      dup3\n      and\n      swap2\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup5\n      jump\n    tag_36:\n      mload(0x40)\n      tag_19\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":4054:4079   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":4122:4136   */\n      swap2\n      iszero\n        /* \"#utility.yul\":4115:4137   */\n      iszero\n        /* \"#utility.yul\":4110:4112   */\n      0x20\n        /* \"#utility.yul\":4095:4113   */\n      dup5\n      add\n        /* \"#utility.yul\":4088:4138   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4174:4206   */\n      and\n        /* \"#utility.yul\":4169:4171   */\n      0x40\n        /* \"#utility.yul\":4154:4172   */\n      dup4\n      add\n        /* \"#utility.yul\":4147:4207   */\n      mstore\n        /* \"#utility.yul\":4238:4240   */\n      0x60\n        /* \"#utility.yul\":4223:4241   */\n      dup3\n      add\n        /* \"#utility.yul\":4216:4250   */\n      mstore\n        /* \"#utility.yul\":4041:4044   */\n      0x80\n        /* \"#utility.yul\":4026:4045   */\n      add\n      swap1\n        /* \"#utility.yul\":3829:4256   */\n      jump\n        /* \"contracts/3_Ballot.sol\":4373:4517  function winnerName() public view... */\n    tag_10:\n      tag_29\n      tag_42\n      jump\t// in\n        /* \"contracts/3_Ballot.sol\":3173:3631  function vote(uint proposal) public {... */\n    tag_15:\n        /* \"contracts/3_Ballot.sol\":3249:3259  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":3219:3239  Voter storage sender */\n      0x00\n        /* \"contracts/3_Ballot.sol\":3242:3260  voters[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/3_Ballot.sol\":3242:3248  voters */\n      0x01\n        /* \"contracts/3_Ballot.sol\":3242:3260  voters[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/3_Ballot.sol\":3278:3291  sender.weight */\n      dup1\n      sload\n        /* \"contracts/3_Ballot.sol\":3270:3321  require(sender.weight != 0, \"Has no right to vote\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1335:1337   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":3270:3321  require(sender.weight != 0, \"Has no right to vote\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1317:1338   */\n      mstore\n        /* \"#utility.yul\":1374:1376   */\n      0x14\n        /* \"#utility.yul\":1354:1372   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1347:1377   */\n      mstore\n      shl(0x60, 0x486173206e6f20726967687420746f20766f7465)\n        /* \"#utility.yul\":1393:1411   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1386:1436   */\n      mstore\n        /* \"#utility.yul\":1453:1471   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":3270:3321  require(sender.weight != 0, \"Has no right to vote\") */\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"contracts/3_Ballot.sol\":3340:3352  sender.voted */\n      0x01\n      dup2\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/3_Ballot.sol\":3339:3352  !sender.voted */\n      iszero\n        /* \"contracts/3_Ballot.sol\":3331:3371  require(!sender.voted, \"Already voted.\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1684:1686   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":3331:3371  require(!sender.voted, \"Already voted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1666:1687   */\n      mstore\n        /* \"#utility.yul\":1723:1725   */\n      0x0e\n        /* \"#utility.yul\":1703:1721   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1696:1726   */\n      mstore\n      shl(0x91, 0x20b63932b0b23c903b37ba32b217)\n        /* \"#utility.yul\":1742:1760   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1735:1779   */\n      mstore\n        /* \"#utility.yul\":1796:1814   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":3331:3371  require(!sender.voted, \"Already voted.\") */\n      tag_47\n        /* \"#utility.yul\":1482:1820   */\n      jump\n        /* \"contracts/3_Ballot.sol\":3331:3371  require(!sender.voted, \"Already voted.\") */\n    tag_49:\n        /* \"contracts/3_Ballot.sol\":3396:3400  true */\n      0x01\n        /* \"contracts/3_Ballot.sol\":3381:3393  sender.voted */\n      dup2\n      dup2\n      add\n        /* \"contracts/3_Ballot.sol\":3381:3400  sender.voted = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/3_Ballot.sol\":3410:3421  sender.vote */\n      0x02\n      dup1\n      dup3\n      add\n        /* \"contracts/3_Ballot.sol\":3410:3432  sender.vote = proposal */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/3_Ballot.sol\":3611:3624  sender.weight */\n      dup2\n      sload\n        /* \"contracts/3_Ballot.sol\":3578:3597  proposals[proposal] */\n      dup2\n      sload\n        /* \"contracts/3_Ballot.sol\":3611:3624  sender.weight */\n      swap1\n      swap2\n        /* \"contracts/3_Ballot.sol\":3410:3421  sender.vote */\n      swap1\n        /* \"contracts/3_Ballot.sol\":3424:3432  proposal */\n      dup5\n      swap1\n        /* \"contracts/3_Ballot.sol\":3578:3597  proposals[proposal] */\n      dup2\n      lt\n      tag_53\n      jumpi\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":3578:3607  proposals[proposal].voteCount */\n      0x01\n      add\n      0x00\n        /* \"contracts/3_Ballot.sol\":3578:3624  proposals[proposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/3_Ballot.sol\":3173:3631  function vote(uint proposal) public {... */\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":794:821  Proposal[] public proposals */\n    tag_18:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      swap1\n      swap2\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":2078:2985  function delegate(address to) public {... */\n    tag_28:\n        /* \"contracts/3_Ballot.sol\":2155:2165  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":2125:2145  Voter storage sender */\n      0x00\n        /* \"contracts/3_Ballot.sol\":2148:2166  voters[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/3_Ballot.sol\":2148:2154  voters */\n      0x01\n        /* \"contracts/3_Ballot.sol\":2148:2166  voters[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/3_Ballot.sol\":2185:2197  sender.voted */\n      swap1\n      dup2\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/3_Ballot.sol\":2184:2197  !sender.voted */\n      iszero\n        /* \"contracts/3_Ballot.sol\":2176:2220  require(!sender.voted, \"You already voted.\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2027:2029   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":2176:2220  require(!sender.voted, \"You already voted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2009:2030   */\n      mstore\n        /* \"#utility.yul\":2066:2068   */\n      0x12\n        /* \"#utility.yul\":2046:2064   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2039:2069   */\n      mstore\n      shl(0x71, 0x2cb7ba9030b63932b0b23c903b37ba32b217)\n        /* \"#utility.yul\":2085:2103   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2078:2126   */\n      mstore\n        /* \"#utility.yul\":2143:2161   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":2176:2220  require(!sender.voted, \"You already voted.\") */\n      tag_47\n        /* \"#utility.yul\":1825:2167   */\n      jump\n        /* \"contracts/3_Ballot.sol\":2176:2220  require(!sender.voted, \"You already voted.\") */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/3_Ballot.sol\":2238:2254  to != msg.sender */\n      dup3\n      and\n        /* \"contracts/3_Ballot.sol\":2244:2254  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":2238:2254  to != msg.sender */\n      eq\n      iszero\n        /* \"contracts/3_Ballot.sol\":2230:2289  require(to != msg.sender, \"Self-delegation is disallowed.\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3490:3492   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":2230:2289  require(to != msg.sender, \"Self-delegation is disallowed.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3472:3493   */\n      mstore\n        /* \"#utility.yul\":3529:3531   */\n      0x1e\n        /* \"#utility.yul\":3509:3527   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3502:3532   */\n      mstore\n        /* \"#utility.yul\":3568:3600   */\n      0x53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e0000\n        /* \"#utility.yul\":3548:3566   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3541:3601   */\n      mstore\n        /* \"#utility.yul\":3618:3636   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":2230:2289  require(to != msg.sender, \"Self-delegation is disallowed.\") */\n      tag_47\n        /* \"#utility.yul\":3288:3642   */\n      jump\n        /* \"contracts/3_Ballot.sol\":2230:2289  require(to != msg.sender, \"Self-delegation is disallowed.\") */\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/3_Ballot.sol\":2307:2317  voters[to] */\n      dup3\n      dup2\n      and\n        /* \"contracts/3_Ballot.sol\":2338:2339  0 */\n      0x00\n        /* \"contracts/3_Ballot.sol\":2307:2317  voters[to] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/3_Ballot.sol\":2307:2313  voters */\n      0x01\n        /* \"contracts/3_Ballot.sol\":2307:2317  voters[to] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/3_Ballot.sol\":2307:2326  voters[to].delegate */\n      add\n      sload\n      0x0100\n      swap1\n      div\n      and\n        /* \"contracts/3_Ballot.sol\":2307:2340  voters[to].delegate != address(0) */\n      iszero\n        /* \"contracts/3_Ballot.sol\":2300:2523  while (voters[to].delegate != address(0)) {... */\n      tag_68\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/3_Ballot.sol\":2361:2371  voters[to] */\n      swap2\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/3_Ballot.sol\":2361:2367  voters */\n      0x01\n        /* \"contracts/3_Ballot.sol\":2361:2371  voters[to] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/3_Ballot.sol\":2361:2380  voters[to].delegate */\n      add\n      sload\n      0x0100\n      swap1\n      div\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/3_Ballot.sol\":2472:2482  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":2466:2482  to != msg.sender */\n      dup3\n      eq\n      iszero\n        /* \"contracts/3_Ballot.sol\":2458:2512  require(to != msg.sender, \"Found loop in delegation.\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2783:2785   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":2458:2512  require(to != msg.sender, \"Found loop in delegation.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2765:2786   */\n      mstore\n        /* \"#utility.yul\":2822:2824   */\n      0x19\n        /* \"#utility.yul\":2802:2820   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2795:2825   */\n      mstore\n        /* \"#utility.yul\":2861:2888   */\n      0x466f756e64206c6f6f7020696e2064656c65676174696f6e2e00000000000000\n        /* \"#utility.yul\":2841:2859   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2834:2889   */\n      mstore\n        /* \"#utility.yul\":2906:2924   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":2458:2512  require(to != msg.sender, \"Found loop in delegation.\") */\n      tag_47\n        /* \"#utility.yul\":2581:2930   */\n      jump\n        /* \"contracts/3_Ballot.sol\":2458:2512  require(to != msg.sender, \"Found loop in delegation.\") */\n    tag_69:\n        /* \"contracts/3_Ballot.sol\":2300:2523  while (voters[to].delegate != address(0)) {... */\n      jump(tag_64)\n    tag_68:\n        /* \"contracts/3_Ballot.sol\":2547:2551  true */\n      0x01\n        /* \"contracts/3_Ballot.sol\":2532:2544  sender.voted */\n      dup2\n      dup2\n      add\n        /* \"contracts/3_Ballot.sol\":2532:2551  sender.voted = true */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x01))\n        /* \"contracts/3_Ballot.sol\":2561:2581  sender.delegate = to */\n      and\n        /* \"contracts/3_Ballot.sol\":2532:2551  sender.voted = true */\n      0x0100\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/3_Ballot.sol\":2561:2581  sender.delegate = to */\n      dup7\n      and\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      dup4\n      or\n      swap1\n      swap2\n      sstore\n      0x00\n        /* \"contracts/3_Ballot.sol\":2617:2627  voters[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup3\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/3_Ballot.sol\":2641:2656  delegate_.voted */\n      swap1\n      dup2\n      add\n      sload\n        /* \"contracts/3_Ballot.sol\":2532:2551  sender.voted = true */\n      0xff\n        /* \"contracts/3_Ballot.sol\":2641:2656  delegate_.voted */\n      and\n        /* \"contracts/3_Ballot.sol\":2637:2979  if (delegate_.voted) {... */\n      iszero\n      tag_72\n      jumpi\n        /* \"contracts/3_Ballot.sol\":2808:2821  sender.weight */\n      dup2\n      sload\n        /* \"contracts/3_Ballot.sol\":2769:2778  proposals */\n      0x02\n        /* \"contracts/3_Ballot.sol\":2779:2793  delegate_.vote */\n      dup3\n      dup2\n      add\n      sload\n        /* \"contracts/3_Ballot.sol\":2769:2794  proposals[delegate_.vote] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_74\n      jumpi\n      tag_74\n      tag_54\n      jump\t// in\n    tag_74:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":2769:2804  proposals[delegate_.vote].voteCount */\n      0x01\n      add\n      0x00\n        /* \"contracts/3_Ballot.sol\":2769:2821  proposals[delegate_.vote].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      tag_76\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_76:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/3_Ballot.sol\":2637:2979  if (delegate_.voted) {... */\n      tag_77\n      swap1\n      pop\n      jump\n    tag_72:\n        /* \"contracts/3_Ballot.sol\":2955:2968  sender.weight */\n      dup2\n      sload\n        /* \"contracts/3_Ballot.sol\":2935:2968  delegate_.weight += sender.weight */\n      dup2\n      sload\n        /* \"contracts/3_Ballot.sol\":2935:2944  delegate_ */\n      dup3\n      swap1\n        /* \"contracts/3_Ballot.sol\":2955:2968  sender.weight */\n      0x00\n      swap1\n        /* \"contracts/3_Ballot.sol\":2935:2968  delegate_.weight += sender.weight */\n      tag_78\n      swap1\n        /* \"contracts/3_Ballot.sol\":2955:2968  sender.weight */\n      dup5\n      swap1\n        /* \"contracts/3_Ballot.sol\":2935:2968  delegate_.weight += sender.weight */\n      tag_57\n      jump\t// in\n    tag_78:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/3_Ballot.sol\":2637:2979  if (delegate_.voted) {... */\n    tag_77:\n        /* \"contracts/3_Ballot.sol\":2115:2985  {... */\n      pop\n      pop\n        /* \"contracts/3_Ballot.sol\":2078:2985  function delegate(address to) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":3817:4182  function winningProposal() public view... */\n    tag_30:\n        /* \"contracts/3_Ballot.sol\":3877:3898  uint winningProposal_ */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/3_Ballot.sol\":3949:4176  for (uint p = 0; p < proposals.length; p++) {... */\n    tag_80:\n        /* \"contracts/3_Ballot.sol\":3970:3979  proposals */\n      0x02\n        /* \"contracts/3_Ballot.sol\":3970:3986  proposals.length */\n      sload\n        /* \"contracts/3_Ballot.sol\":3966:3986  p < proposals.length */\n      dup2\n      lt\n        /* \"contracts/3_Ballot.sol\":3949:4176  for (uint p = 0; p < proposals.length; p++) {... */\n      iszero\n      tag_81\n      jumpi\n        /* \"contracts/3_Ballot.sol\":4036:4052  winningVoteCount */\n      dup2\n        /* \"contracts/3_Ballot.sol\":4011:4020  proposals */\n      0x02\n        /* \"contracts/3_Ballot.sol\":4021:4022  p */\n      dup3\n        /* \"contracts/3_Ballot.sol\":4011:4023  proposals[p] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_84\n      jumpi\n      tag_84\n      tag_54\n      jump\t// in\n    tag_84:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":4011:4033  proposals[p].voteCount */\n      0x01\n      add\n      sload\n        /* \"contracts/3_Ballot.sol\":4011:4052  proposals[p].voteCount > winningVoteCount */\n      gt\n        /* \"contracts/3_Ballot.sol\":4007:4166  if (proposals[p].voteCount > winningVoteCount) {... */\n      iszero\n      tag_86\n      jumpi\n        /* \"contracts/3_Ballot.sol\":4091:4100  proposals */\n      0x02\n        /* \"contracts/3_Ballot.sol\":4101:4102  p */\n      dup2\n        /* \"contracts/3_Ballot.sol\":4091:4103  proposals[p] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_88\n      jumpi\n      tag_88\n      tag_54\n      jump\t// in\n    tag_88:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":4091:4113  proposals[p].voteCount */\n      0x01\n      add\n      sload\n        /* \"contracts/3_Ballot.sol\":4072:4113  winningVoteCount = proposals[p].voteCount */\n      swap2\n      pop\n        /* \"contracts/3_Ballot.sol\":4150:4151  p */\n      dup1\n        /* \"contracts/3_Ballot.sol\":4131:4151  winningProposal_ = p */\n      swap3\n      pop\n        /* \"contracts/3_Ballot.sol\":4007:4166  if (proposals[p].voteCount > winningVoteCount) {... */\n    tag_86:\n        /* \"contracts/3_Ballot.sol\":3988:3991  p++ */\n      dup1\n      tag_90\n      dup2\n      tag_91\n      jump\t// in\n    tag_90:\n      swap2\n      pop\n      pop\n        /* \"contracts/3_Ballot.sol\":3949:4176  for (uint p = 0; p < proposals.length; p++) {... */\n      jump(tag_80)\n    tag_81:\n      pop\n        /* \"contracts/3_Ballot.sol\":3904:4182  {... */\n      pop\n        /* \"contracts/3_Ballot.sol\":3817:4182  function winningProposal() public view... */\n      swap1\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":1599:1954  function giveRightToVote(address voter) public {... */\n    tag_35:\n        /* \"contracts/3_Ballot.sol\":1691:1702  chairperson */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/3_Ballot.sol\":1677:1687  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":1677:1702  msg.sender == chairperson */\n      eq\n        /* \"contracts/3_Ballot.sol\":1656:1768  require(... */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2374:2376   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":1656:1768  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2356:2377   */\n      mstore\n        /* \"#utility.yul\":2413:2415   */\n      0x28\n        /* \"#utility.yul\":2393:2411   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2386:2416   */\n      mstore\n        /* \"#utility.yul\":2452:2486   */\n      0x4f6e6c79206368616972706572736f6e2063616e206769766520726967687420\n        /* \"#utility.yul\":2432:2450   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2425:2487   */\n      mstore\n      shl(0xc1, 0x3a37903b37ba3297)\n        /* \"#utility.yul\":2503:2521   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2496:2534   */\n      mstore\n        /* \"#utility.yul\":2551:2570   */\n      0x84\n      add\n        /* \"contracts/3_Ballot.sol\":1656:1768  require(... */\n      tag_47\n        /* \"#utility.yul\":2172:2576   */\n      jump\n        /* \"contracts/3_Ballot.sol\":1656:1768  require(... */\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/3_Ballot.sol\":1800:1813  voters[voter] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/3_Ballot.sol\":1800:1806  voters */\n      0x01\n        /* \"contracts/3_Ballot.sol\":1800:1813  voters[voter] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/3_Ballot.sol\":1800:1819  voters[voter].voted */\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/3_Ballot.sol\":1799:1819  !voters[voter].voted */\n      iszero\n        /* \"contracts/3_Ballot.sol\":1778:1869  require(... */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3137:3139   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":1778:1869  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3119:3140   */\n      mstore\n        /* \"#utility.yul\":3176:3178   */\n      0x18\n        /* \"#utility.yul\":3156:3174   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3149:3179   */\n      mstore\n        /* \"#utility.yul\":3215:3241   */\n      0x54686520766f74657220616c726561647920766f7465642e0000000000000000\n        /* \"#utility.yul\":3195:3213   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3188:3242   */\n      mstore\n        /* \"#utility.yul\":3259:3277   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":1778:1869  require(... */\n      tag_47\n        /* \"#utility.yul\":2935:3283   */\n      jump\n        /* \"contracts/3_Ballot.sol\":1778:1869  require(... */\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/3_Ballot.sol\":1887:1900  voters[voter] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/3_Ballot.sol\":1887:1893  voters */\n      0x01\n        /* \"contracts/3_Ballot.sol\":1887:1900  voters[voter] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/3_Ballot.sol\":1887:1907  voters[voter].weight */\n      sload\n        /* \"contracts/3_Ballot.sol\":1887:1912  voters[voter].weight == 0 */\n      iszero\n        /* \"contracts/3_Ballot.sol\":1879:1913  require(voters[voter].weight == 0) */\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/3_Ballot.sol\":1923:1936  voters[voter] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/3_Ballot.sol\":1946:1947  1 */\n      0x01\n        /* \"contracts/3_Ballot.sol\":1923:1936  voters[voter] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/3_Ballot.sol\":1923:1947  voters[voter].weight = 1 */\n      sstore\n        /* \"contracts/3_Ballot.sol\":1599:1954  function giveRightToVote(address voter) public {... */\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":4373:4517  function winnerName() public view... */\n    tag_42:\n        /* \"contracts/3_Ballot.sol\":4428:4447  bytes32 winnerName_ */\n      0x00\n        /* \"contracts/3_Ballot.sol\":4477:4486  proposals */\n      0x02\n        /* \"contracts/3_Ballot.sol\":4487:4504  winningProposal() */\n      tag_101\n        /* \"contracts/3_Ballot.sol\":4487:4502  winningProposal */\n      tag_30\n        /* \"contracts/3_Ballot.sol\":4487:4504  winningProposal() */\n      jump\t// in\n    tag_101:\n        /* \"contracts/3_Ballot.sol\":4477:4505  proposals[winningProposal()] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_103\n      jumpi\n      tag_103\n      tag_54\n      jump\t// in\n    tag_103:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":4477:4510  proposals[winningProposal()].name */\n      0x00\n      add\n      sload\n        /* \"contracts/3_Ballot.sol\":4463:4510  winnerName_ = proposals[winningProposal()].name */\n      swap1\n      pop\n        /* \"contracts/3_Ballot.sol\":4373:4517  function winnerName() public view... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_27:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_107:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_108\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_108:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":305:485   */\n    tag_14:\n        /* \"#utility.yul\":364:370   */\n      0x00\n        /* \"#utility.yul\":417:419   */\n      0x20\n        /* \"#utility.yul\":405:414   */\n      dup3\n        /* \"#utility.yul\":396:403   */\n      dup5\n        /* \"#utility.yul\":392:415   */\n      sub\n        /* \"#utility.yul\":388:420   */\n      slt\n        /* \"#utility.yul\":385:437   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":433:434   */\n      0x00\n        /* \"#utility.yul\":430:431   */\n      dup1\n        /* \"#utility.yul\":423:435   */\n      revert\n        /* \"#utility.yul\":385:437   */\n    tag_110:\n      pop\n        /* \"#utility.yul\":456:479   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":305:485   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4261:4389   */\n    tag_57:\n        /* \"#utility.yul\":4301:4304   */\n      0x00\n        /* \"#utility.yul\":4332:4333   */\n      dup3\n        /* \"#utility.yul\":4328:4334   */\n      not\n        /* \"#utility.yul\":4325:4326   */\n      dup3\n        /* \"#utility.yul\":4322:4335   */\n      gt\n        /* \"#utility.yul\":4319:4358   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":4338:4356   */\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      pop\n        /* \"#utility.yul\":4374:4383   */\n      add\n      swap1\n        /* \"#utility.yul\":4261:4389   */\n      jump\t// out\n        /* \"#utility.yul\":4394:4529   */\n    tag_91:\n        /* \"#utility.yul\":4433:4436   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":4454:4471   */\n      dup3\n      eq\n        /* \"#utility.yul\":4451:4494   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":4474:4492   */\n      tag_129\n      tag_126\n      jump\t// in\n    tag_129:\n      pop\n        /* \"#utility.yul\":4521:4522   */\n      0x01\n        /* \"#utility.yul\":4510:4523   */\n      add\n      swap1\n        /* \"#utility.yul\":4394:4529   */\n      jump\t// out\n        /* \"#utility.yul\":4534:4661   */\n    tag_126:\n        /* \"#utility.yul\":4595:4605   */\n      0x4e487b71\n        /* \"#utility.yul\":4590:4593   */\n      0xe0\n        /* \"#utility.yul\":4586:4606   */\n      shl\n        /* \"#utility.yul\":4583:4584   */\n      0x00\n        /* \"#utility.yul\":4576:4607   */\n      mstore\n        /* \"#utility.yul\":4626:4630   */\n      0x11\n        /* \"#utility.yul\":4623:4624   */\n      0x04\n        /* \"#utility.yul\":4616:4631   */\n      mstore\n        /* \"#utility.yul\":4650:4654   */\n      0x24\n        /* \"#utility.yul\":4647:4648   */\n      0x00\n        /* \"#utility.yul\":4640:4655   */\n      revert\n        /* \"#utility.yul\":4666:4793   */\n    tag_54:\n        /* \"#utility.yul\":4727:4737   */\n      0x4e487b71\n        /* \"#utility.yul\":4722:4725   */\n      0xe0\n        /* \"#utility.yul\":4718:4738   */\n      shl\n        /* \"#utility.yul\":4715:4716   */\n      0x00\n        /* \"#utility.yul\":4708:4739   */\n      mstore\n        /* \"#utility.yul\":4758:4762   */\n      0x32\n        /* \"#utility.yul\":4755:4756   */\n      0x04\n        /* \"#utility.yul\":4748:4763   */\n      mstore\n        /* \"#utility.yul\":4782:4786   */\n      0x24\n        /* \"#utility.yul\":4779:4780   */\n      0x00\n        /* \"#utility.yul\":4772:4787   */\n      revert\n\n    auxdata: 0xa2646970667358221220db31f7ee9972f79116f430753197082b191101114740c5a378f9fdb1564d858e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_71": {
									"entryPoint": null,
									"id": 71,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 463,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1633:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "120:1010:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "130:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "140:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "134:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "196:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "199:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "189:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "189:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "162:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "171:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "158:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "158:23:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "183:2:1"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "154:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "154:32:1"
															},
															"nodeType": "YulIf",
															"src": "151:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "212:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "232:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "226:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "226:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "216:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "251:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "269:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "273:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "265:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "265:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "277:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "255:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "306:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "315:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "318:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "308:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "308:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "308:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "294:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "302:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "291:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "291:14:1"
															},
															"nodeType": "YulIf",
															"src": "288:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "331:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "345:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "356:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "341:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "335:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "411:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "420:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "423:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "413:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "413:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "413:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "390:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "394:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "386:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "386:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "401:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "382:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "375:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:35:1"
															},
															"nodeType": "YulIf",
															"src": "372:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "436:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "452:2:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "446:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:9:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "440:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "478:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "480:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "480:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "480:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "470:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "474:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "467:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:10:1"
															},
															"nodeType": "YulIf",
															"src": "464:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "509:20:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "523:1:1",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "526:2:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "519:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:10:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "513:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "538:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "558:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "552:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "552:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "542:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "570:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "592:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "608:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "612:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "604:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "604:11:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "621:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "617:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "617:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "600:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "600:25:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "588:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "588:38:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "574:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "685:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "687:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "687:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "687:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "644:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "656:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "641:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "641:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "664:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "676:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "661:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "661:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "638:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "638:46:1"
															},
															"nodeType": "YulIf",
															"src": "635:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "723:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "727:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "716:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "747:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "758:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "751:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "788:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "773:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "800:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "811:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "819:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "807:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "807:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "800:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "831:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "846:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "850:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "842:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "842:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "835:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "899:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "908:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "911:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "901:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "901:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "901:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "876:2:1"
																					},
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "880:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "872:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "872:11:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "885:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "868:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "868:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "890:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "865:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "865:33:1"
															},
															"nodeType": "YulIf",
															"src": "862:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "924:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "933:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "928:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "988:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1009:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1020:3:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1014:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1014:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1002:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1002:23:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1002:23:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1038:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1049:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1054:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1045:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1045:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1038:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1070:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1081:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1086:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1077:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1077:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "954:1:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "957:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "951:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "951:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "961:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "963:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "972:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "975:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "968:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "968:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "963:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "947:3:1",
																"statements": []
															},
															"src": "943:156:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1108:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1118:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1108:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "86:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "97:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "109:6:1",
														"type": ""
													}
												],
												"src": "14:1116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1182:185:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1221:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1242:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1249:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1254:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1245:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1245:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1235:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1235:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1235:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1289:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1279:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1279:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1279:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1314:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1317:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1307:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1307:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1198:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1209:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1205:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1205:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1195:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1195:17:1"
															},
															"nodeType": "YulIf",
															"src": "1192:140:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1341:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1352:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1359:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1348:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1348:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1341:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1164:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1174:3:1",
														"type": ""
													}
												],
												"src": "1135:232:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1404:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1421:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1428:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1433:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1424:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1424:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1414:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1414:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1414:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1461:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1464:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1454:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1454:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1485:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1488:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1478:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1478:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1478:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "1372:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1536:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1553:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1560:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1565:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1556:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1556:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1546:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1546:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1593:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1596:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1586:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1586:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1586:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1617:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1620:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1610:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1610:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1610:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1504:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := memPtr\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161096d38038061096d83398101604081905261002f916100cc565b600080546001600160a01b03191633908117825581526001602081905260408220555b81518110156100c5576002604051806040016040528084848151811061007a5761007a6101b9565b602090810291909101810151825260009181018290528354600181810186559483529181902083516002909302019182559190910151910155806100bd81610190565b915050610052565b50506101e5565b600060208083850312156100df57600080fd5b82516001600160401b03808211156100f657600080fd5b818501915085601f83011261010a57600080fd5b81518181111561011c5761011c6101cf565b8060051b604051601f19603f83011681018181108582111715610141576101416101cf565b604052828152858101935084860182860187018a101561016057600080fd5b600095505b83861015610183578051855260019590950194938601938601610165565b5098975050505050505050565b60006000198214156101b257634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b610779806101f46000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063609ff1bd1161005b578063609ff1bd1461010d5780639e7b8d6114610123578063a3ec138d14610136578063e2ba53f0146101a757600080fd5b80630121b93f1461008d578063013cf08b146100a25780632e4176cf146100cf5780635c19a95c146100fa575b600080fd5b6100a061009b3660046106cb565b6101af565b005b6100b56100b03660046106cb565b6102a6565b604080519283526020830191909152015b60405180910390f35b6000546100e2906001600160a01b031681565b6040516001600160a01b0390911681526020016100c6565b6100a061010836600461069b565b6102d4565b6101156104d3565b6040519081526020016100c6565b6100a061013136600461069b565b610550565b61017861014436600461069b565b600160208190526000918252604090912080549181015460029091015460ff82169161010090046001600160a01b03169084565b6040516100c6949392919093845291151560208401526001600160a01b03166040830152606082015260800190565b610115610668565b33600090815260016020526040902080546102085760405162461bcd60e51b8152602060048201526014602482015273486173206e6f20726967687420746f20766f746560601b60448201526064015b60405180910390fd5b600181015460ff161561024e5760405162461bcd60e51b815260206004820152600e60248201526d20b63932b0b23c903b37ba32b21760911b60448201526064016101ff565b6001818101805460ff191690911790556002808201839055815481549091908490811061027d5761027d61072d565b9060005260206000209060020201600101600082825461029d91906106e4565b90915550505050565b600281815481106102b657600080fd5b60009182526020909120600290910201805460019091015490915082565b3360009081526001602081905260409091209081015460ff161561032f5760405162461bcd60e51b81526020600482015260126024820152712cb7ba9030b63932b0b23c903b37ba32b21760711b60448201526064016101ff565b6001600160a01b0382163314156103885760405162461bcd60e51b815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e000060448201526064016101ff565b6001600160a01b03828116600090815260016020819052604090912001546101009004161561042d576001600160a01b0391821660009081526001602081905260409091200154610100900490911690338214156104285760405162461bcd60e51b815260206004820152601960248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e2e0000000000000060448201526064016101ff565b610388565b600181810180546001600160a81b0319166101006001600160a01b03861690810291909117831790915560009081526020829052604090209081015460ff16156104b4578154600282810154815481106104895761048961072d565b906000526020600020906002020160010160008282546104a991906106e4565b909155506104ce9050565b8154815482906000906104c89084906106e4565b90915550505b505050565b600080805b60025481101561054b5781600282815481106104f6576104f661072d565b906000526020600020906002020160010154111561053957600281815481106105215761052161072d565b90600052602060002090600202016001015491508092505b80610543816106fc565b9150506104d8565b505090565b6000546001600160a01b031633146105bb5760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e2067697665207269676874206044820152673a37903b37ba329760c11b60648201526084016101ff565b6001600160a01b0381166000908152600160208190526040909120015460ff16156106285760405162461bcd60e51b815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e000000000000000060448201526064016101ff565b6001600160a01b0381166000908152600160205260409020541561064b57600080fd5b6001600160a01b0316600090815260016020819052604090912055565b600060026106746104d3565b815481106106845761068461072d565b906000526020600020906002020160000154905090565b6000602082840312156106ad57600080fd5b81356001600160a01b03811681146106c457600080fd5b9392505050565b6000602082840312156106dd57600080fd5b5035919050565b600082198211156106f7576106f7610717565b500190565b600060001982141561071057610710610717565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220db31f7ee9972f79116f430753197082b191101114740c5a378f9fdb1564d858e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x96D CODESIZE SUB DUP1 PUSH2 0x96D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xCC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SSTORE JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xC5 JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7A JUMPI PUSH2 0x7A PUSH2 0x1B9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE SWAP5 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP2 SWAP1 SWAP2 ADD MLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0xBD DUP2 PUSH2 0x190 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x52 JUMP JUMPDEST POP POP PUSH2 0x1E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x11C JUMPI PUSH2 0x11C PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x141 JUMPI PUSH2 0x141 PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x183 JUMPI DUP1 MLOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x165 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x779 DUP1 PUSH2 0x1F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x609FF1BD GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xE2BA53F0 EQ PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x13CF08B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0xFA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x6CB JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB5 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x6CB JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xE2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x69B JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x69B JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x668 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x208 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x486173206E6F20726967687420746F20766F7465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x24E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x20B63932B0B23C903B37BA32B217 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP3 ADD DUP4 SWAP1 SSTORE DUP2 SLOAD DUP2 SLOAD SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x27D JUMPI PUSH2 0x27D PUSH2 0x72D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x6E4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x32F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2CB7BA9030B63932B0B23C903B37BA32B217 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV AND ISZERO PUSH2 0x42D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 CALLER DUP3 EQ ISZERO PUSH2 0x428 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x388 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4B4 JUMPI DUP2 SLOAD PUSH1 0x2 DUP3 DUP2 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x489 JUMPI PUSH2 0x489 PUSH2 0x72D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x6E4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4CE SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x4C8 SWAP1 DUP5 SWAP1 PUSH2 0x6E4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x54B JUMPI DUP2 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4F6 JUMPI PUSH2 0x4F6 PUSH2 0x72D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x539 JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x521 JUMPI PUSH2 0x521 PUSH2 0x72D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 PUSH2 0x543 DUP2 PUSH2 0x6FC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4D8 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3A37903B37BA3297 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x64B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x674 PUSH2 0x4D3 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x684 JUMPI PUSH2 0x684 PUSH2 0x72D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x6F7 JUMPI PUSH2 0x6F7 PUSH2 0x717 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x710 JUMPI PUSH2 0x710 PUSH2 0x717 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB BALANCE 0xF7 0xEE SWAP10 PUSH19 0xF79116F430753197082B191101114740C5A378 0xF9 REVERT 0xB1 JUMP 0x4D DUP6 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "157:4362:0:-:0;;;958:481;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1012:11;:24;;-1:-1:-1;;;;;;1012:24:0;1026:10;1012:24;;;;;1046:19;;1012:24;1046:19;;;;;;;:30;1087:346;1108:13;:20;1104:1;:24;1087:346;;;1312:9;1327:94;;;;;;;;1360:13;1374:1;1360:16;;;;;;;;:::i;:::-;;;;;;;;;;;;1327:94;;1405:1;1327:94;;;;;;1312:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1130:3;;;;:::i;:::-;;;;1087:346;;;;958:481;157:4362;;14:1116:1;109:6;140:2;183;171:9;162:7;158:23;154:32;151:52;;;199:1;196;189:12;151:52;226:16;;-1:-1:-1;;;;;291:14:1;;;288:34;;;318:1;315;308:12;288:34;356:6;345:9;341:22;331:32;;401:7;394:4;390:2;386:13;382:27;372:55;;423:1;420;413:12;372:55;452:2;446:9;474:2;470;467:10;464:36;;;480:18;;:::i;:::-;526:2;523:1;519:10;558:2;552:9;621:2;617:7;612:2;608;604:11;600:25;592:6;588:38;676:6;664:10;661:22;656:2;644:10;641:18;638:46;635:72;;;687:18;;:::i;:::-;723:2;716:22;773:18;;;807:15;;;;-1:-1:-1;842:11:1;;;872;;;868:20;;865:33;-1:-1:-1;862:53:1;;;911:1;908;901:12;862:53;933:1;924:10;;943:156;957:2;954:1;951:9;943:156;;;1014:10;;1002:23;;975:1;968:9;;;;;1045:12;;;;1077;;943:156;;;-1:-1:-1;1118:6:1;14:1116;-1:-1:-1;;;;;;;;14:1116:1:o;1135:232::-;1174:3;-1:-1:-1;;1195:17:1;;1192:140;;;1254:10;1249:3;1245:20;1242:1;1235:31;1289:4;1286:1;1279:15;1317:4;1314:1;1307:15;1192:140;-1:-1:-1;1359:1:1;1348:13;;1135:232::o;1372:127::-;1433:10;1428:3;1424:20;1421:1;1414:31;1464:4;1461:1;1454:15;1488:4;1485:1;1478:15;1504:127;1565:10;1560:3;1556:20;1553:1;1546:31;1596:4;1593:1;1586:15;1620:4;1617:1;1610:15;1504:127;157:4362:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@chairperson_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@delegate_207": {
									"entryPoint": 724,
									"id": 207,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@giveRightToVote_111": {
									"entryPoint": 1360,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@proposals_27": {
									"entryPoint": 678,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vote_257": {
									"entryPoint": 431,
									"id": 257,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@voters_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@winnerName_315": {
									"entryPoint": 1640,
									"id": 315,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@winningProposal_300": {
									"entryPoint": 1235,
									"id": 300,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool_t_address_t_uint256__to_t_uint256_t_bool_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1815,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1837,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4795:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:1"
															},
															"nodeType": "YulIf",
															"src": "200:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:286:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "375:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "421:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "433:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "396:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "405:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "392:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "392:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "417:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "388:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "388:32:1"
															},
															"nodeType": "YulIf",
															"src": "385:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "446:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "469:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "456:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "446:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "341:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "352:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "364:6:1",
														"type": ""
													}
												],
												"src": "305:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "591:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "601:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "613:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "609:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "601:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "643:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "658:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "674:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "679:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "670:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "670:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "683:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "666:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "666:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "654:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "654:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "636:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "636:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "560:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "571:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "582:4:1",
														"type": ""
													}
												],
												"src": "490:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "799:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "809:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "821:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "832:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "817:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "817:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "809:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "851:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "862:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "844:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "844:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "844:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "768:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "779:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "790:4:1",
														"type": ""
													}
												],
												"src": "698:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1009:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1019:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1031:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1042:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1027:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1027:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1019:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1061:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1072:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1054:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1054:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1054:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1099:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1110:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1095:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1095:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1115:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1088:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1088:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "970:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "981:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "989:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1000:4:1",
														"type": ""
													}
												],
												"src": "880:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1307:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1324:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1335:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1317:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1317:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1317:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1358:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1369:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1354:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1354:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1374:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1347:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1347:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1347:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1397:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1408:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1393:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1393:18:1"
																	},
																	{
																		"hexValue": "486173206e6f20726967687420746f20766f7465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1413:22:1",
																		"type": "",
																		"value": "Has no right to vote"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1386:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1386:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1445:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1457:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1468:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1453:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1453:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1445:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1284:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1298:4:1",
														"type": ""
													}
												],
												"src": "1133:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1656:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1673:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1684:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1666:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1666:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1666:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1707:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1718:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1703:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1703:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1723:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1696:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1696:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1746:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1757:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1742:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1742:18:1"
																	},
																	{
																		"hexValue": "416c726561647920766f7465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1762:16:1",
																		"type": "",
																		"value": "Already voted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1735:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1735:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1735:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1788:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1800:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1811:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1796:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1796:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1788:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1633:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1647:4:1",
														"type": ""
													}
												],
												"src": "1482:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:168:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2016:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2027:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2050:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2061:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2046:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2046:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2066:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2039:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2039:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2039:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2089:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2100:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2085:18:1"
																	},
																	{
																		"hexValue": "596f7520616c726561647920766f7465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2105:20:1",
																		"type": "",
																		"value": "You already voted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2078:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2078:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2078:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2135:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2147:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2158:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2143:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2143:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2135:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1976:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1990:4:1",
														"type": ""
													}
												],
												"src": "1825:342:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2346:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2363:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2374:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2356:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2356:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2397:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2408:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2393:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2393:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2413:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2386:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2386:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2386:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2436:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2447:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2432:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2432:18:1"
																	},
																	{
																		"hexValue": "4f6e6c79206368616972706572736f6e2063616e206769766520726967687420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2452:34:1",
																		"type": "",
																		"value": "Only chairperson can give right "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2425:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2425:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2507:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2518:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2503:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2503:18:1"
																	},
																	{
																		"hexValue": "746f20766f74652e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2523:10:1",
																		"type": "",
																		"value": "to vote."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2496:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2496:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2496:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2543:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2555:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2566:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2543:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2323:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2337:4:1",
														"type": ""
													}
												],
												"src": "2172:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2755:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2772:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2783:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2765:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2765:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2765:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2806:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2817:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2802:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2802:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2822:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2795:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2795:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2795:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2845:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2856:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2841:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2841:18:1"
																	},
																	{
																		"hexValue": "466f756e64206c6f6f7020696e2064656c65676174696f6e2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2861:27:1",
																		"type": "",
																		"value": "Found loop in delegation."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2834:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2834:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2834:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2898:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2910:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2921:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2906:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2906:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2898:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2732:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2746:4:1",
														"type": ""
													}
												],
												"src": "2581:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3109:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3126:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3119:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3119:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3119:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3160:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3171:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3156:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3156:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3176:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3149:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3149:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3199:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3210:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3195:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3195:18:1"
																	},
																	{
																		"hexValue": "54686520766f74657220616c726561647920766f7465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3215:26:1",
																		"type": "",
																		"value": "The voter already voted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3188:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3188:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3188:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3251:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3263:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3274:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3259:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3259:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3251:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3086:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3100:4:1",
														"type": ""
													}
												],
												"src": "2935:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3462:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3479:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3490:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3472:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3472:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3472:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3513:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3524:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3509:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3509:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3529:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3502:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3502:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3552:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3563:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3548:18:1"
																	},
																	{
																		"hexValue": "53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3568:32:1",
																		"type": "",
																		"value": "Self-delegation is disallowed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3541:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3541:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3541:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3610:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3622:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3633:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3618:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3618:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3610:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3439:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3453:4:1",
														"type": ""
													}
												],
												"src": "3288:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3748:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3758:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3770:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3781:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3766:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3766:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3758:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3800:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3811:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3793:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3793:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3793:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3717:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3728:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3739:4:1",
														"type": ""
													}
												],
												"src": "3647:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4008:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4018:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4030:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4041:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4026:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4026:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4018:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4061:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4072:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4054:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4054:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4054:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4099:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4110:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4095:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4095:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "4129:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4122:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4122:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4115:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4115:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4088:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4088:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4088:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4158:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4169:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4154:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4154:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "4178:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4194:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4199:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4190:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4190:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4203:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4186:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4186:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4174:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4174:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4147:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4147:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4147:60:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4227:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4238:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4223:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4223:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4243:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4216:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4216:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4216:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool_t_address_t_uint256__to_t_uint256_t_bool_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3953:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3964:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3972:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3980:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3988:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3999:4:1",
														"type": ""
													}
												],
												"src": "3829:427:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4309:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4336:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4338:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4338:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4338:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4325:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4332:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4328:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4328:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4322:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4322:13:1"
															},
															"nodeType": "YulIf",
															"src": "4319:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4367:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4378:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4381:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4374:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4374:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4367:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4292:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4295:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4301:3:1",
														"type": ""
													}
												],
												"src": "4261:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4441:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4472:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4474:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4474:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4474:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4457:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4468:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4464:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4464:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4454:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4454:17:1"
															},
															"nodeType": "YulIf",
															"src": "4451:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4503:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4514:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4521:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4510:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4510:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4503:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4423:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4433:3:1",
														"type": ""
													}
												],
												"src": "4394:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4566:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4583:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4590:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4595:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4586:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4586:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4576:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4576:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4576:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4623:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4626:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4616:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4616:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4616:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4647:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4650:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4640:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4640:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4534:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4698:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4715:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4722:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4727:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4718:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4718:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4708:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4708:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4708:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4755:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4758:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4748:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4748:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4748:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4779:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4782:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4772:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4772:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "4666:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Has no right to vote\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Already voted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"You already voted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Only chairperson can give right \")\n        mstore(add(headStart, 96), \"to vote.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Found loop in delegation.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"The voter already voted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Self-delegation is disallowed.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_bool_t_address_t_uint256__to_t_uint256_t_bool_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c8063609ff1bd1161005b578063609ff1bd1461010d5780639e7b8d6114610123578063a3ec138d14610136578063e2ba53f0146101a757600080fd5b80630121b93f1461008d578063013cf08b146100a25780632e4176cf146100cf5780635c19a95c146100fa575b600080fd5b6100a061009b3660046106cb565b6101af565b005b6100b56100b03660046106cb565b6102a6565b604080519283526020830191909152015b60405180910390f35b6000546100e2906001600160a01b031681565b6040516001600160a01b0390911681526020016100c6565b6100a061010836600461069b565b6102d4565b6101156104d3565b6040519081526020016100c6565b6100a061013136600461069b565b610550565b61017861014436600461069b565b600160208190526000918252604090912080549181015460029091015460ff82169161010090046001600160a01b03169084565b6040516100c6949392919093845291151560208401526001600160a01b03166040830152606082015260800190565b610115610668565b33600090815260016020526040902080546102085760405162461bcd60e51b8152602060048201526014602482015273486173206e6f20726967687420746f20766f746560601b60448201526064015b60405180910390fd5b600181015460ff161561024e5760405162461bcd60e51b815260206004820152600e60248201526d20b63932b0b23c903b37ba32b21760911b60448201526064016101ff565b6001818101805460ff191690911790556002808201839055815481549091908490811061027d5761027d61072d565b9060005260206000209060020201600101600082825461029d91906106e4565b90915550505050565b600281815481106102b657600080fd5b60009182526020909120600290910201805460019091015490915082565b3360009081526001602081905260409091209081015460ff161561032f5760405162461bcd60e51b81526020600482015260126024820152712cb7ba9030b63932b0b23c903b37ba32b21760711b60448201526064016101ff565b6001600160a01b0382163314156103885760405162461bcd60e51b815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e000060448201526064016101ff565b6001600160a01b03828116600090815260016020819052604090912001546101009004161561042d576001600160a01b0391821660009081526001602081905260409091200154610100900490911690338214156104285760405162461bcd60e51b815260206004820152601960248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e2e0000000000000060448201526064016101ff565b610388565b600181810180546001600160a81b0319166101006001600160a01b03861690810291909117831790915560009081526020829052604090209081015460ff16156104b4578154600282810154815481106104895761048961072d565b906000526020600020906002020160010160008282546104a991906106e4565b909155506104ce9050565b8154815482906000906104c89084906106e4565b90915550505b505050565b600080805b60025481101561054b5781600282815481106104f6576104f661072d565b906000526020600020906002020160010154111561053957600281815481106105215761052161072d565b90600052602060002090600202016001015491508092505b80610543816106fc565b9150506104d8565b505090565b6000546001600160a01b031633146105bb5760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e2067697665207269676874206044820152673a37903b37ba329760c11b60648201526084016101ff565b6001600160a01b0381166000908152600160208190526040909120015460ff16156106285760405162461bcd60e51b815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e000000000000000060448201526064016101ff565b6001600160a01b0381166000908152600160205260409020541561064b57600080fd5b6001600160a01b0316600090815260016020819052604090912055565b600060026106746104d3565b815481106106845761068461072d565b906000526020600020906002020160000154905090565b6000602082840312156106ad57600080fd5b81356001600160a01b03811681146106c457600080fd5b9392505050565b6000602082840312156106dd57600080fd5b5035919050565b600082198211156106f7576106f7610717565b500190565b600060001982141561071057610710610717565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220db31f7ee9972f79116f430753197082b191101114740c5a378f9fdb1564d858e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x609FF1BD GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xE2BA53F0 EQ PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x13CF08B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0xFA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x6CB JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB5 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x6CB JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xE2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x69B JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x69B JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x668 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x208 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x486173206E6F20726967687420746F20766F7465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x24E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x20B63932B0B23C903B37BA32B217 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP3 ADD DUP4 SWAP1 SSTORE DUP2 SLOAD DUP2 SLOAD SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x27D JUMPI PUSH2 0x27D PUSH2 0x72D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x6E4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x32F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2CB7BA9030B63932B0B23C903B37BA32B217 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV AND ISZERO PUSH2 0x42D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 CALLER DUP3 EQ ISZERO PUSH2 0x428 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x388 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4B4 JUMPI DUP2 SLOAD PUSH1 0x2 DUP3 DUP2 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x489 JUMPI PUSH2 0x489 PUSH2 0x72D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x6E4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4CE SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x4C8 SWAP1 DUP5 SWAP1 PUSH2 0x6E4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x54B JUMPI DUP2 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4F6 JUMPI PUSH2 0x4F6 PUSH2 0x72D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x539 JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x521 JUMPI PUSH2 0x521 PUSH2 0x72D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 PUSH2 0x543 DUP2 PUSH2 0x6FC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4D8 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3A37903B37BA3297 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x64B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x674 PUSH2 0x4D3 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x684 JUMPI PUSH2 0x684 PUSH2 0x72D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x6F7 JUMPI PUSH2 0x6F7 PUSH2 0x717 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x710 JUMPI PUSH2 0x710 PUSH2 0x717 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB BALANCE 0xF7 0xEE SWAP10 PUSH19 0xF79116F430753197082B191101114740C5A378 0xF9 REVERT 0xB1 JUMP 0x4D DUP6 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "157:4362:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3173:458;;;;;;:::i;:::-;;:::i;:::-;;794:27;;;;;;:::i;:::-;;:::i;:::-;;;;1054:25:1;;;1110:2;1095:18;;1088:34;;;;1027:18;794:27:0;;;;;;;;715:26;;;;;-1:-1:-1;;;;;715:26:0;;;;;;-1:-1:-1;;;;;654:32:1;;;636:51;;624:2;609:18;715:26:0;490:203:1;2078:907:0;;;;;;:::i;:::-;;:::i;3817:365::-;;;:::i;:::-;;;844:25:1;;;832:2;817:18;3817:365:0;698:177:1;1599:355:0;;;;;;:::i;:::-;;:::i;748:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;748:39:0;;;;;;;;;;;;;4054:25:1;;;4122:14;;4115:22;4110:2;4095:18;;4088:50;-1:-1:-1;;;;;4174:32:1;4169:2;4154:18;;4147:60;4238:2;4223:18;;4216:34;4041:3;4026:19;;3829:427;4373:144:0;;;:::i;3173:458::-;3249:10;3219:20;3242:18;;;:6;:18;;;;;3278:13;;3270:51;;;;-1:-1:-1;;;3270:51:0;;1335:2:1;3270:51:0;;;1317:21:1;1374:2;1354:18;;;1347:30;-1:-1:-1;;;1393:18:1;;;1386:50;1453:18;;3270:51:0;;;;;;;;;3340:12;;;;;;3339:13;3331:40;;;;-1:-1:-1;;;3331:40:0;;1684:2:1;3331:40:0;;;1666:21:1;1723:2;1703:18;;;1696:30;-1:-1:-1;;;1742:18:1;;;1735:44;1796:18;;3331:40:0;1482:338:1;3331:40:0;3396:4;3381:12;;;:19;;-1:-1:-1;;3381:19:0;;;;;;3410:11;;;;:22;;;3611:13;;3578:19;;3611:13;;3410:11;3424:8;;3578:19;;;;;;:::i;:::-;;;;;;;;;;;:29;;;:46;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;3173:458:0:o;794:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:27:0;:::o;2078:907::-;2155:10;2125:20;2148:18;;;:6;:18;;;;;;;;2185:12;;;;;;2184:13;2176:44;;;;-1:-1:-1;;;2176:44:0;;2027:2:1;2176:44:0;;;2009:21:1;2066:2;2046:18;;;2039:30;-1:-1:-1;;;2085:18:1;;;2078:48;2143:18;;2176:44:0;1825:342:1;2176:44:0;-1:-1:-1;;;;;2238:16:0;;2244:10;2238:16;;2230:59;;;;-1:-1:-1;;;2230:59:0;;3490:2:1;2230:59:0;;;3472:21:1;3529:2;3509:18;;;3502:30;3568:32;3548:18;;;3541:60;3618:18;;2230:59:0;3288:354:1;2230:59:0;-1:-1:-1;;;;;2307:10:0;;;2338:1;2307:10;;;:6;:10;;;;;;;;:19;;;;;;:33;2300:223;;-1:-1:-1;;;;;2361:10:0;;;;;;;:6;:10;;;;;;;;:19;;;;;;;;;2472:10;2466:16;;;2458:54;;;;-1:-1:-1;;;2458:54:0;;2783:2:1;2458:54:0;;;2765:21:1;2822:2;2802:18;;;2795:30;2861:27;2841:18;;;2834:55;2906:18;;2458:54:0;2581:349:1;2458:54:0;2300:223;;;2547:4;2532:12;;;:19;;-1:-1:-1;;;;;;2561:20:0;2532:19;-1:-1:-1;;;;;2561:20:0;;;;;;;;;;;;;;-1:-1:-1;2617:10:0;;;;;;;;;;2641:15;;;;2532:19;2641:15;2637:342;;;2808:13;;2769:9;2779:14;;;;2769:25;;;;;;;;:::i;:::-;;;;;;;;;;;:35;;;:52;;;;;;;:::i;:::-;;;;-1:-1:-1;2637:342:0;;-1:-1:-1;2637:342:0;;2955:13;;2935:33;;:9;;2955:13;;2935:33;;2955:13;;2935:33;:::i;:::-;;;;-1:-1:-1;;2637:342:0;2115:870;;2078:907;:::o;3817:365::-;3877:21;;;3949:227;3970:9;:16;3966:20;;3949:227;;;4036:16;4011:9;4021:1;4011:12;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:41;4007:159;;;4091:9;4101:1;4091:12;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;4072:41;;4150:1;4131:20;;4007:159;3988:3;;;;:::i;:::-;;;;3949:227;;;;3904:278;3817:365;:::o;1599:355::-;1691:11;;-1:-1:-1;;;;;1691:11:0;1677:10;:25;1656:112;;;;-1:-1:-1;;;1656:112:0;;2374:2:1;1656:112:0;;;2356:21:1;2413:2;2393:18;;;2386:30;2452:34;2432:18;;;2425:62;-1:-1:-1;;;2503:18:1;;;2496:38;2551:19;;1656:112:0;2172:404:1;1656:112:0;-1:-1:-1;;;;;1800:13:0;;;;;;:6;:13;;;;;;;;:19;;;;1799:20;1778:91;;;;-1:-1:-1;;;1778:91:0;;3137:2:1;1778:91:0;;;3119:21:1;3176:2;3156:18;;;3149:30;3215:26;3195:18;;;3188:54;3259:18;;1778:91:0;2935:348:1;1778:91:0;-1:-1:-1;;;;;1887:13:0;;;;;;:6;:13;;;;;:20;:25;1879:34;;;;;;-1:-1:-1;;;;;1923:13:0;;;;;1946:1;1923:13;;;;;;;;:24;1599:355::o;4373:144::-;4428:19;4477:9;4487:17;:15;:17::i;:::-;4477:28;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;;4463:47;;4373:144;:::o;14:286:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:1;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:1:o;305:180::-;364:6;417:2;405:9;396:7;392:23;388:32;385:52;;;433:1;430;423:12;385:52;-1:-1:-1;456:23:1;;305:180;-1:-1:-1;305:180:1:o;4261:128::-;4301:3;4332:1;4328:6;4325:1;4322:13;4319:39;;;4338:18;;:::i;:::-;-1:-1:-1;4374:9:1;;4261:128::o;4394:135::-;4433:3;-1:-1:-1;;4454:17:1;;4451:43;;;4474:18;;:::i;:::-;-1:-1:-1;4521:1:1;4510:13;;4394:135::o;4534:127::-;4595:10;4590:3;4586:20;4583:1;4576:31;4626:4;4623:1;4616:15;4650:4;4647:1;4640:15;4666:127;4727:10;4722:3;4718:20;4715:1;4708:31;4758:4;4755:1;4748:15;4782:4;4779:1;4772:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "382600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"chairperson()": "2382",
								"delegate(address)": "infinite",
								"giveRightToVote(address)": "29057",
								"proposals(uint256)": "6743",
								"vote(uint256)": "79501",
								"voters(address)": "6895",
								"winnerName()": "infinite",
								"winningProposal()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 157,
									"end": 4519,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 157,
									"end": 4519,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 157,
									"end": 4519,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1012,
									"end": 1023,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1012,
									"end": 1036,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1012,
									"end": 1036,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1012,
									"end": 1036,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1026,
									"end": 1036,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1012,
									"end": 1036,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1012,
									"end": 1036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1012,
									"end": 1036,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1012,
									"end": 1036,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1012,
									"end": 1036,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1012,
									"end": 1036,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1046,
									"end": 1076,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1433,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1087,
									"end": 1433,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1108,
									"end": 1121,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1108,
									"end": 1128,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1105,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1128,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1433,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1433,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1087,
									"end": 1433,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1321,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1327,
									"end": 1421,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1327,
									"end": 1421,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1327,
									"end": 1421,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1327,
									"end": 1421,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1327,
									"end": 1421,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1327,
									"end": 1421,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1327,
									"end": 1421,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1327,
									"end": 1421,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1373,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1376,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1327,
									"end": 1421,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1327,
									"end": 1421,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1405,
									"end": 1406,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1327,
									"end": 1421,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1327,
									"end": 1421,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1327,
									"end": 1421,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1327,
									"end": 1421,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1327,
									"end": 1421,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1327,
									"end": 1421,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1422,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1130,
									"end": 1133,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1130,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1130,
									"end": 1133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1130,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1130,
									"end": 1133,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1130,
									"end": 1133,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1130,
									"end": 1133,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1130,
									"end": 1133,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1130,
									"end": 1133,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1130,
									"end": 1133,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1433,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1087,
									"end": 1433,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1433,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1087,
									"end": 1433,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1433,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 958,
									"end": 1439,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 157,
									"end": 4519,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 157,
									"end": 4519,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 1130,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 1130,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 109,
									"end": 115,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 142,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 183,
									"end": 185,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 180,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 162,
									"end": 169,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 158,
									"end": 181,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 154,
									"end": 186,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 151,
									"end": 203,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 151,
									"end": 203,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 151,
									"end": 203,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 199,
									"end": 200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 196,
									"end": 197,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 189,
									"end": 201,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 151,
									"end": 203,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 151,
									"end": 203,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 226,
									"end": 242,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 226,
									"end": 242,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 291,
									"end": 305,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 291,
									"end": 305,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 291,
									"end": 305,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 288,
									"end": 322,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 288,
									"end": 322,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 288,
									"end": 322,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 318,
									"end": 319,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 315,
									"end": 316,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 308,
									"end": 320,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 288,
									"end": 322,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 288,
									"end": 322,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 356,
									"end": 362,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 345,
									"end": 354,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 341,
									"end": 363,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 331,
									"end": 363,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 331,
									"end": 363,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 401,
									"end": 408,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 394,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 390,
									"end": 392,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 386,
									"end": 399,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 382,
									"end": 409,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 372,
									"end": 427,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 372,
									"end": 427,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 423,
									"end": 424,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 421,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 413,
									"end": 425,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 372,
									"end": 427,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 372,
									"end": 427,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 452,
									"end": 454,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 446,
									"end": 455,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 474,
									"end": 476,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 470,
									"end": 472,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 467,
									"end": 477,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 464,
									"end": 500,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 464,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 464,
									"end": 500,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 480,
									"end": 498,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 480,
									"end": 498,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 480,
									"end": 498,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 480,
									"end": 498,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 480,
									"end": 498,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 526,
									"end": 528,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 523,
									"end": 524,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 519,
									"end": 529,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 558,
									"end": 560,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 552,
									"end": 561,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 621,
									"end": 623,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 617,
									"end": 624,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 612,
									"end": 614,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 608,
									"end": 610,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 604,
									"end": 615,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 600,
									"end": 625,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 592,
									"end": 598,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 588,
									"end": 626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 676,
									"end": 682,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 664,
									"end": 674,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 661,
									"end": 683,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 656,
									"end": 658,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 644,
									"end": 654,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 641,
									"end": 659,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 638,
									"end": 684,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 635,
									"end": 707,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 635,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 635,
									"end": 707,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 687,
									"end": 705,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 687,
									"end": 705,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 687,
									"end": 705,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 687,
									"end": 705,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 687,
									"end": 705,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 723,
									"end": 725,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 716,
									"end": 738,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 773,
									"end": 791,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 773,
									"end": 791,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 773,
									"end": 791,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 807,
									"end": 822,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 807,
									"end": 822,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 807,
									"end": 822,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 807,
									"end": 822,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 842,
									"end": 853,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 842,
									"end": 853,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 842,
									"end": 853,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 872,
									"end": 883,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 872,
									"end": 883,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 872,
									"end": 883,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 868,
									"end": 888,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 868,
									"end": 888,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 865,
									"end": 898,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 862,
									"end": 915,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 862,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 862,
									"end": 915,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 911,
									"end": 912,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 908,
									"end": 909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 901,
									"end": 913,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 862,
									"end": 915,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 862,
									"end": 915,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 933,
									"end": 934,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 924,
									"end": 934,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 924,
									"end": 934,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 943,
									"end": 1099,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 943,
									"end": 1099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 957,
									"end": 959,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 954,
									"end": 955,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 951,
									"end": 960,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 943,
									"end": 1099,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 943,
									"end": 1099,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 943,
									"end": 1099,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 1024,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 1024,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1025,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1025,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 975,
									"end": 976,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 968,
									"end": 977,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 968,
									"end": 977,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 968,
									"end": 977,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 968,
									"end": 977,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 968,
									"end": 977,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1045,
									"end": 1057,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1045,
									"end": 1057,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1045,
									"end": 1057,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1045,
									"end": 1057,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1077,
									"end": 1089,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1077,
									"end": 1089,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 943,
									"end": 1099,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 943,
									"end": 1099,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 943,
									"end": 1099,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 943,
									"end": 1099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1118,
									"end": 1124,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 14,
									"end": 1130,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 1130,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1135,
									"end": 1367,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1135,
									"end": 1367,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1174,
									"end": 1177,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1195,
									"end": 1212,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1195,
									"end": 1212,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1192,
									"end": 1332,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1192,
									"end": 1332,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1192,
									"end": 1332,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1264,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1249,
									"end": 1252,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1245,
									"end": 1265,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1242,
									"end": 1243,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1235,
									"end": 1266,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1279,
									"end": 1294,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1317,
									"end": 1321,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1314,
									"end": 1315,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1307,
									"end": 1322,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1192,
									"end": 1332,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1192,
									"end": 1332,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1348,
									"end": 1361,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1348,
									"end": 1361,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1367,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1372,
									"end": 1499,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1372,
									"end": 1499,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1433,
									"end": 1443,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1428,
									"end": 1431,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1424,
									"end": 1444,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1421,
									"end": 1422,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1414,
									"end": 1445,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1464,
									"end": 1468,
									"name": "PUSH",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1454,
									"end": 1469,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1488,
									"end": 1492,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1485,
									"end": 1486,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1478,
									"end": 1493,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1504,
									"end": 1631,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1504,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1575,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1560,
									"end": 1563,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1556,
									"end": 1576,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1554,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1546,
									"end": 1577,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1596,
									"end": 1600,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1593,
									"end": 1594,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1586,
									"end": 1601,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1620,
									"end": 1624,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1617,
									"end": 1618,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1610,
									"end": 1625,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1504,
									"end": 1631,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1504,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 157,
									"end": 4519,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 4519,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 157,
									"end": 4519,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 4519,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 4519,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 157,
									"end": 4519,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 4519,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220db31f7ee9972f79116f430753197082b191101114740c5a378f9fdb1564d858e64736f6c63430008070033",
									".code": [
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "609FF1BD"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "609FF1BD"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "9E7B8D61"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "A3EC138D"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "E2BA53F0"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "121B93F"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "13CF08B"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "2E4176CF"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "5C19A95C"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3631,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3173,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3173,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3173,
											"end": 3631,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3631,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3173,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3173,
											"end": 3631,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3173,
											"end": 3631,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3173,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3173,
											"end": 3631,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3173,
											"end": 3631,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3173,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3631,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1079,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1079,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1079,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1113,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 794,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 715,
											"end": 741,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 715,
											"end": 741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 715,
											"end": 741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 741,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 715,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 715,
											"end": 741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 715,
											"end": 741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 715,
											"end": 741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 715,
											"end": 741,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 715,
											"end": 741,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 715,
											"end": 741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 715,
											"end": 741,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 741,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 654,
											"end": 686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 686,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 654,
											"end": 686,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 636,
											"end": 687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 636,
											"end": 687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 627,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 715,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 490,
											"end": 693,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2985,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2078,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2078,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2078,
											"end": 2985,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2078,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2078,
											"end": 2985,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2078,
											"end": 2985,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2078,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2078,
											"end": 2985,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3817,
											"end": 4182,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3817,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3817,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3817,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3817,
											"end": 4182,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3817,
											"end": 4182,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3817,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3817,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3817,
											"end": 4182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 844,
											"end": 869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 844,
											"end": 869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 832,
											"end": 834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 698,
											"end": 875,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1954,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1599,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1599,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1599,
											"end": 1954,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1954,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1599,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1599,
											"end": 1954,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1599,
											"end": 1954,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1599,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1599,
											"end": 1954,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 748,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 748,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 748,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 748,
											"end": 787,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 748,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 748,
											"end": 787,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 748,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 748,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 748,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 748,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 748,
											"end": 787,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 748,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 748,
											"end": 787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 748,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 748,
											"end": 787,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4079,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4079,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4079,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4136,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4115,
											"end": 4137,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4110,
											"end": 4112,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4174,
											"end": 4206,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4171,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4207,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4223,
											"end": 4241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4216,
											"end": 4250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4041,
											"end": 4044,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4026,
											"end": 4045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 4256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4373,
											"end": 4517,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4373,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4373,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4373,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4373,
											"end": 4517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3173,
											"end": 3631,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3173,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3259,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3242,
											"end": 3260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3248,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3242,
											"end": 3260,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3242,
											"end": 3260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3260,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3278,
											"end": 3291,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1337,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1354,
											"end": 1372,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1354,
											"end": 1372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "486173206E6F20726967687420746F20766F7465"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 1436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1453,
											"end": 1471,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1453,
											"end": 1471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3270,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3340,
											"end": 3352,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3340,
											"end": 3352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3340,
											"end": 3352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3340,
											"end": 3352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3340,
											"end": 3352,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3340,
											"end": 3352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3352,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3331,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3331,
											"end": 3371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3331,
											"end": 3371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3331,
											"end": 3371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3331,
											"end": 3371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3331,
											"end": 3371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1686,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3331,
											"end": 3371,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3331,
											"end": 3371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3331,
											"end": 3371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1725,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1703,
											"end": 1721,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1703,
											"end": 1721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20B63932B0B23C903B37BA32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1742,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1742,
											"end": 1760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1814,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1796,
											"end": 1814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3331,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1482,
											"end": 1820,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3331,
											"end": 3371,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3331,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3381,
											"end": 3400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3400,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3400,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3421,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3410,
											"end": 3421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3421,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3432,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3432,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3611,
											"end": 3624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3611,
											"end": 3624,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3597,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3611,
											"end": 3624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3611,
											"end": 3624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3424,
											"end": 3432,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3424,
											"end": 3432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3597,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3578,
											"end": 3597,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3578,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3578,
											"end": 3597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3578,
											"end": 3597,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3578,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3578,
											"end": 3597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3597,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3578,
											"end": 3597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3578,
											"end": 3597,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3597,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3578,
											"end": 3597,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3597,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3607,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3578,
											"end": 3607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3578,
											"end": 3624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3624,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3578,
											"end": 3624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3578,
											"end": 3624,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3578,
											"end": 3624,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3578,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3624,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3173,
											"end": 3631,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 794,
											"end": 821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 821,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 794,
											"end": 821,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2078,
											"end": 2985,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2078,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2165,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2154,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2197,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2197,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2197,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2185,
											"end": 2197,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2197,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2176,
											"end": 2220,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2176,
											"end": 2220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2176,
											"end": 2220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2176,
											"end": 2220,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2176,
											"end": 2220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2030,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2068,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2069,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BA9030B63932B0B23C903B37BA32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2085,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2085,
											"end": 2103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1825,
											"end": 2167,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2220,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2176,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2254,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2230,
											"end": 2289,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2230,
											"end": 2289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2289,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3490,
											"end": 3492,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2289,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2230,
											"end": 2289,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2289,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3493,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3531,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 3509,
											"end": 3527,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3509,
											"end": 3527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3502,
											"end": 3532,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3568,
											"end": 3600,
											"name": "PUSH",
											"source": 1,
											"value": "53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3601,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3636,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3618,
											"end": 3636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3288,
											"end": 3642,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2289,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2230,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2307,
											"end": 2317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2313,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2307,
											"end": 2317,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2307,
											"end": 2317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2317,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2326,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2326,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2326,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2307,
											"end": 2326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2326,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2326,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2340,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2300,
											"end": 2523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2361,
											"end": 2371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2361,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2361,
											"end": 2371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2361,
											"end": 2371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2371,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2361,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2380,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2482,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2458,
											"end": 2512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2458,
											"end": 2512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2458,
											"end": 2512,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2458,
											"end": 2512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2822,
											"end": 2824,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2888,
											"name": "PUSH",
											"source": 1,
											"value": "466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000"
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2581,
											"end": 2930,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2512,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2458,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2300,
											"end": 2523,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2300,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2532,
											"end": 2544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2581,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2581,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2581,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2581,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2581,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2581,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2617,
											"end": 2627,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2617,
											"end": 2627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2627,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2637,
											"end": 2979,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2637,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2637,
											"end": 2979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2821,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2778,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2779,
											"end": 2793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2804,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2769,
											"end": 2804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2821,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2821,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2821,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2769,
											"end": 2821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2769,
											"end": 2821,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2769,
											"end": 2821,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2769,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2821,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2637,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2637,
											"end": 2979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2637,
											"end": 2979,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2637,
											"end": 2979,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2637,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2968,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2935,
											"end": 2944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2935,
											"end": 2944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2968,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2637,
											"end": 2979,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2637,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2985,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3817,
											"end": 4182,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3817,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3898,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3898,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 4176,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3949,
											"end": 4176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 3979,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3970,
											"end": 3986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3986,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 4176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 4176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3949,
											"end": 4176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4020,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4021,
											"end": 4022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4033,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4011,
											"end": 4033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4052,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4166,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4007,
											"end": 4166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4100,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4101,
											"end": 4102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4113,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4150,
											"end": 4151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4151,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4166,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4007,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 3991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3988,
											"end": 3991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3988,
											"end": 3991,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3988,
											"end": 3991,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3988,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 3991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 3991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 3991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 4176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3949,
											"end": 4176,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 4176,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3949,
											"end": 4176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 4176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 4182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3817,
											"end": 4182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3817,
											"end": 4182,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1599,
											"end": 1954,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1599,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1691,
											"end": 1702,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1691,
											"end": 1702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1687,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1656,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1656,
											"end": 1768,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1656,
											"end": 1768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1656,
											"end": 1768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1656,
											"end": 1768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1656,
											"end": 1768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2376,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1656,
											"end": 1768,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1656,
											"end": 1768,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1656,
											"end": 1768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2413,
											"end": 2415,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2393,
											"end": 2411,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2393,
											"end": 2411,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2411,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2452,
											"end": 2486,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C79206368616972706572736F6E2063616E206769766520726967687420"
										},
										{
											"begin": 2432,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2432,
											"end": 2450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2487,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A37903B37BA3297"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2503,
											"end": 2521,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2503,
											"end": 2521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2534,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2570,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2551,
											"end": 2570,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2172,
											"end": 2576,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1768,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1656,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1800,
											"end": 1813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1800,
											"end": 1813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1800,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1800,
											"end": 1813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1800,
											"end": 1813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1813,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1819,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1819,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1800,
											"end": 1819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1819,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1778,
											"end": 1869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1778,
											"end": 1869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1778,
											"end": 1869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3139,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1778,
											"end": 1869,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1778,
											"end": 1869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3119,
											"end": 3140,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "54686520766F74657220616C726561647920766F7465642E0000000000000000"
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3259,
											"end": 3277,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3259,
											"end": 3277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2935,
											"end": 3283,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1869,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1778,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1887,
											"end": 1900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1887,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1887,
											"end": 1900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1900,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1907,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1912,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1879,
											"end": 1913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1913,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1913,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1879,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1947,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1947,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1954,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4373,
											"end": 4517,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4373,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4486,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4487,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4477,
											"end": 4505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4477,
											"end": 4505,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4477,
											"end": 4505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4477,
											"end": 4505,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4477,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4477,
											"end": 4505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4477,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4477,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4477,
											"end": 4505,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4477,
											"end": 4505,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4477,
											"end": 4505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4477,
											"end": 4505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4477,
											"end": 4505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4505,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4477,
											"end": 4505,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4477,
											"end": 4505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4505,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4477,
											"end": 4505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4477,
											"end": 4505,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4477,
											"end": 4505,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4477,
											"end": 4505,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4477,
											"end": 4510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4477,
											"end": 4510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4463,
											"end": 4510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4463,
											"end": 4510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4373,
											"end": 4517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4373,
											"end": 4517,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 305,
											"end": 485,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 305,
											"end": 485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 364,
											"end": 370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 405,
											"end": 414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 396,
											"end": 403,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 392,
											"end": 415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 388,
											"end": 420,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 385,
											"end": 437,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 385,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 385,
											"end": 437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 433,
											"end": 434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 431,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 423,
											"end": 435,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 385,
											"end": 437,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 385,
											"end": 437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 456,
											"end": 479,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 456,
											"end": 479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 305,
											"end": 485,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4261,
											"end": 4389,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4261,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4332,
											"end": 4333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4334,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4319,
											"end": 4358,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4319,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4319,
											"end": 4358,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4338,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4338,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4338,
											"end": 4356,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4338,
											"end": 4356,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4338,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4374,
											"end": 4383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4389,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4394,
											"end": 4529,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4394,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4454,
											"end": 4471,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4471,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4451,
											"end": 4494,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4451,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4451,
											"end": 4494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4474,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4474,
											"end": 4492,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4474,
											"end": 4492,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4474,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4521,
											"end": 4522,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4510,
											"end": 4523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4394,
											"end": 4529,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4534,
											"end": 4661,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4534,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 4605,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4590,
											"end": 4593,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4586,
											"end": 4606,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4584,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4576,
											"end": 4607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4626,
											"end": 4630,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4623,
											"end": 4624,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4616,
											"end": 4631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4650,
											"end": 4654,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4647,
											"end": 4648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 4655,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4793,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4666,
											"end": 4793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4737,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4722,
											"end": 4725,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4718,
											"end": 4738,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4708,
											"end": 4739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4762,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4755,
											"end": 4756,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4748,
											"end": 4763,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4782,
											"end": 4786,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4779,
											"end": 4780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4787,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"chairperson()": "2e4176cf",
							"delegate(address)": "5c19a95c",
							"giveRightToVote(address)": "9e7b8d61",
							"proposals(uint256)": "013cf08b",
							"vote(uint256)": "0121b93f",
							"voters(address)": "a3ec138d",
							"winnerName()": "e2ba53f0",
							"winningProposal()": "609ff1bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proposalNames\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"chairperson\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"giveRightToVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposal\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"voted\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"vote\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerName\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"winnerName_\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winningProposal_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements voting process along with vote delegation\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Create a new ballot to choose one of 'proposalNames'.\",\"params\":{\"proposalNames\":\"names of proposals\"}},\"delegate(address)\":{\"details\":\"Delegate your vote to the voter 'to'.\",\"params\":{\"to\":\"address to which vote is delegated\"}},\"giveRightToVote(address)\":{\"details\":\"Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.\",\"params\":{\"voter\":\"address of voter\"}},\"vote(uint256)\":{\"details\":\"Give your vote (including votes delegated to you) to proposal 'proposals[proposal].name'.\",\"params\":{\"proposal\":\"index of proposal in the proposals array\"}},\"winnerName()\":{\"details\":\"Calls winningProposal() function to get the index of the winner contained in the proposals array and then\",\"returns\":{\"winnerName_\":\"the name of the winner\"}},\"winningProposal()\":{\"details\":\"Computes the winning proposal taking all previous votes into account.\",\"returns\":{\"winningProposal_\":\"index of winning proposal in the proposals array\"}}},\"title\":\"Ballot\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/3_Ballot.sol\":\"Ballot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/3_Ballot.sol\":{\"keccak256\":\"0xdd897b48a563d1d32369fdb327187dfcd2660159cfcd3787196bb6be6a312c8d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://551d7a6d3e2abc66a7b37fbd8b0e4c07b43c72c3b55958e66ac421348311fed4\",\"dweb:/ipfs/Qmd4XV9j79GPfv5cgVsg62vKzaLuf6igx7VSW2BKaUyF3w\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/3_Ballot.sol": {
				"ast": {
					"absolutePath": "contracts/3_Ballot.sol",
					"exportedSymbols": {
						"Ballot": [
							316
						]
					},
					"id": 317,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "70:86:0",
								"text": " @title Ballot\n @dev Implements voting process along with vote delegation"
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "Ballot",
							"nameLocation": "166:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "weight",
											"nameLocation": "211:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "206:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "206:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "voted",
											"nameLocation": "271:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "266:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 5,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "266:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 8,
											"mutability": "mutable",
											"name": "delegate",
											"nameLocation": "333:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "325:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 7,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "325:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "vote",
											"nameLocation": "379:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "374:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "374:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nameLocation": "190:5:0",
									"nodeType": "StructDefinition",
									"scope": 316,
									"src": "183:240:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 16,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "610:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "602:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 12,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "602:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 15,
											"mutability": "mutable",
											"name": "voteCount",
											"nameLocation": "662:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "657:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 14,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "657:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nameLocation": "436:8:0",
									"nodeType": "StructDefinition",
									"scope": 316,
									"src": "429:280:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2e4176cf",
									"id": 18,
									"mutability": "mutable",
									"name": "chairperson",
									"nameLocation": "730:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "715:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 17,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "715:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a3ec138d",
									"id": 23,
									"mutability": "mutable",
									"name": "voters",
									"nameLocation": "781:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "748:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 19,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "756:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "748:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter)"
										},
										"valueType": {
											"id": 21,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 20,
												"name": "Voter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 11,
												"src": "767:5:0"
											},
											"referencedDeclaration": 11,
											"src": "767:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
												"typeString": "struct Ballot.Voter"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "013cf08b",
									"id": 27,
									"mutability": "mutable",
									"name": "proposals",
									"nameLocation": "812:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "794:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "Proposal",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 16,
												"src": "794:8:0"
											},
											"referencedDeclaration": 16,
											"src": "794:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$16_storage_ptr",
												"typeString": "struct Ballot.Proposal"
											}
										},
										"id": 26,
										"nodeType": "ArrayTypeName",
										"src": "794:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal[]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "1002:437:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 34,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1012:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 35,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1026:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1026:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1012:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "1012:24:0"
											},
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 39,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "1046:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 41,
															"indexExpression": {
																"id": 40,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "1053:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1046:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "1046:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1075:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1046:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "1046:30:0"
											},
											{
												"body": {
													"id": 68,
													"nodeType": "Block",
													"src": "1135:298:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 61,
																					"name": "proposalNames",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 31,
																					"src": "1360:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 63,
																				"indexExpression": {
																					"id": 62,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 47,
																					"src": "1374:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1360:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 64,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1405:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 60,
																			"name": "Proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 16,
																			"src": "1327:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_Proposal_$16_storage_ptr_$",
																				"typeString": "type(struct Ballot.Proposal storage pointer)"
																			}
																		},
																		"id": 65,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"names": [
																			"name",
																			"voteCount"
																		],
																		"nodeType": "FunctionCall",
																		"src": "1327:94:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$16_memory_ptr",
																			"typeString": "struct Ballot.Proposal memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Proposal_$16_memory_ptr",
																			"typeString": "struct Ballot.Proposal memory"
																		}
																	],
																	"expression": {
																		"id": 57,
																		"name": "proposals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "1312:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																			"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																		}
																	},
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "1312:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$16_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$16_storage_$returns$__$bound_to$_t_array$_t_struct$_Proposal_$16_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct Ballot.Proposal storage ref[] storage pointer,struct Ballot.Proposal storage ref)"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1312:110:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 67,
															"nodeType": "ExpressionStatement",
															"src": "1312:110:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 50,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1104:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 51,
															"name": "proposalNames",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "1108:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1108:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1104:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 69,
												"initializationExpression": {
													"assignments": [
														47
													],
													"declarations": [
														{
															"constant": false,
															"id": 47,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1097:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 69,
															"src": "1092:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 46,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1092:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 49,
													"initialValue": {
														"hexValue": "30",
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1101:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1092:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1130:3:0",
														"subExpression": {
															"id": 54,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "1130:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 56,
													"nodeType": "ExpressionStatement",
													"src": "1130:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1087:346:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "828:125:0",
										"text": " @dev Create a new ballot to choose one of 'proposalNames'.\n @param proposalNames names of proposals"
									},
									"id": 71,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "proposalNames",
												"nameLocation": "987:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "970:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 29,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "970:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 30,
													"nodeType": "ArrayTypeName",
													"src": "970:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:32:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1002:0:0"
									},
									"scope": 316,
									"src": "958:481:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "1646:308:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 78,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1677:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1677:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 80,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "1691:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1677:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206368616972706572736f6e2063616e206769766520726967687420746f20766f74652e",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1716:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95",
																"typeString": "literal_string \"Only chairperson can give right to vote.\""
															},
															"value": "Only chairperson can give right to vote."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95",
																"typeString": "literal_string \"Only chairperson can give right to vote.\""
															}
														],
														"id": 77,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1656:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1656:112:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "1656:112:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1799:20:0",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 86,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "1800:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																			"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																		}
																	},
																	"id": 88,
																	"indexExpression": {
																		"id": 87,
																		"name": "voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 74,
																		"src": "1807:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1800:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$11_storage",
																		"typeString": "struct Ballot.Voter storage ref"
																	}
																},
																"id": 89,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 6,
																"src": "1800:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520766f74657220616c726561647920766f7465642e",
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1833:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d",
																"typeString": "literal_string \"The voter already voted.\""
															},
															"value": "The voter already voted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d",
																"typeString": "literal_string \"The voter already voted.\""
															}
														],
														"id": 85,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1778:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1778:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1778:91:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 95,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "1887:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																			"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																		}
																	},
																	"id": 97,
																	"indexExpression": {
																		"id": 96,
																		"name": "voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 74,
																		"src": "1894:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1887:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$11_storage",
																		"typeString": "struct Ballot.Voter storage ref"
																	}
																},
																"id": 98,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1887:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1911:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1887:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 94,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1879:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1879:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "1879:34:0"
											},
											{
												"expression": {
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 103,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "1923:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 105,
															"indexExpression": {
																"id": 104,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "1930:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1923:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "1923:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1946:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1923:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "1923:24:0"
											}
										]
									},
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "1449:145:0",
										"text": " @dev Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.\n @param voter address of voter"
									},
									"functionSelector": "9e7b8d61",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "giveRightToVote",
									"nameLocation": "1608:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "1632:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1624:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1623:15:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1646:0:0"
									},
									"scope": 316,
									"src": "1599:355:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "2115:870:0",
										"statements": [
											{
												"assignments": [
													119
												],
												"declarations": [
													{
														"constant": false,
														"id": 119,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "2139:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 206,
														"src": "2125:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"id": 118,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 117,
																"name": "Voter",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 11,
																"src": "2125:5:0"
															},
															"referencedDeclaration": 11,
															"src": "2125:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 124,
												"initialValue": {
													"baseExpression": {
														"id": 120,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "2148:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 123,
													"indexExpression": {
														"expression": {
															"id": 121,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2155:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2155:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2148:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$11_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2125:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2184:13:0",
															"subExpression": {
																"expression": {
																	"id": 126,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "2185:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																		"typeString": "struct Ballot.Voter storage pointer"
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 6,
																"src": "2185:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520616c726561647920766f7465642e",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2199:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f",
																"typeString": "literal_string \"You already voted.\""
															},
															"value": "You already voted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f",
																"typeString": "literal_string \"You already voted.\""
															}
														],
														"id": 125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2176:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2176:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 133,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "2238:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 134,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2244:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2244:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2238:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2256:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947",
																"typeString": "literal_string \"Self-delegation is disallowed.\""
															},
															"value": "Self-delegation is disallowed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947",
																"typeString": "literal_string \"Self-delegation is disallowed.\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2230:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2230:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "2230:59:0"
											},
											{
												"body": {
													"id": 164,
													"nodeType": "Block",
													"src": "2342:181:0",
													"statements": [
														{
															"expression": {
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 149,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "2356:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 150,
																			"name": "voters",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 23,
																			"src": "2361:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																				"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																			}
																		},
																		"id": 152,
																		"indexExpression": {
																			"id": 151,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 114,
																			"src": "2368:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2361:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$11_storage",
																			"typeString": "struct Ballot.Voter storage ref"
																		}
																	},
																	"id": 153,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "delegate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 8,
																	"src": "2361:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2356:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 155,
															"nodeType": "ExpressionStatement",
															"src": "2356:24:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 157,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 114,
																			"src": "2466:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 158,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2472:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2472:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "2466:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "466f756e64206c6f6f7020696e2064656c65676174696f6e2e",
																		"id": 161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2484:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c",
																			"typeString": "literal_string \"Found loop in delegation.\""
																		},
																		"value": "Found loop in delegation."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c",
																			"typeString": "literal_string \"Found loop in delegation.\""
																		}
																	],
																	"id": 156,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2458:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2458:54:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 163,
															"nodeType": "ExpressionStatement",
															"src": "2458:54:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 140,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "2307:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 142,
															"indexExpression": {
																"id": 141,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "2314:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2307:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "2307:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2338:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2330:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 144,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2330:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2330:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2307:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "WhileStatement",
												"src": "2300:223:0"
											},
											{
												"expression": {
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 166,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2532:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 168,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "2532:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2547:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2532:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2532:19:0"
											},
											{
												"expression": {
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 172,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2561:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 174,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "delegate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "2561:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 175,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "2579:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2561:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "2561:20:0"
											},
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "delegate_",
														"nameLocation": "2605:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 206,
														"src": "2591:23:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"id": 179,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 178,
																"name": "Voter",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 11,
																"src": "2591:5:0"
															},
															"referencedDeclaration": 11,
															"src": "2591:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"baseExpression": {
														"id": 181,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "2617:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 183,
													"indexExpression": {
														"id": 182,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "2624:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2617:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$11_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2591:36:0"
											},
											{
												"condition": {
													"expression": {
														"id": 185,
														"name": "delegate_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "2641:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
															"typeString": "struct Ballot.Voter storage pointer"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "voted",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "2641:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 204,
													"nodeType": "Block",
													"src": "2838:141:0",
													"statements": [
														{
															"expression": {
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 197,
																		"name": "delegate_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 180,
																		"src": "2935:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																			"typeString": "struct Ballot.Voter storage pointer"
																		}
																	},
																	"id": 199,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4,
																	"src": "2935:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 200,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 119,
																		"src": "2955:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																			"typeString": "struct Ballot.Voter storage pointer"
																		}
																	},
																	"id": 201,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4,
																	"src": "2955:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2935:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 203,
															"nodeType": "ExpressionStatement",
															"src": "2935:33:0"
														}
													]
												},
												"id": 205,
												"nodeType": "IfStatement",
												"src": "2637:342:0",
												"trueBody": {
													"id": 196,
													"nodeType": "Block",
													"src": "2658:174:0",
													"statements": [
														{
															"expression": {
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 187,
																			"name": "proposals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 27,
																			"src": "2769:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																				"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																			}
																		},
																		"id": 190,
																		"indexExpression": {
																			"expression": {
																				"id": 188,
																				"name": "delegate_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 180,
																				"src": "2779:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																					"typeString": "struct Ballot.Voter storage pointer"
																				}
																			},
																			"id": 189,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "vote",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 10,
																			"src": "2779:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2769:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$16_storage",
																			"typeString": "struct Ballot.Proposal storage ref"
																		}
																	},
																	"id": 191,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "voteCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 15,
																	"src": "2769:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 192,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 119,
																		"src": "2808:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																			"typeString": "struct Ballot.Voter storage pointer"
																		}
																	},
																	"id": 193,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4,
																	"src": "2808:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2769:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 195,
															"nodeType": "ExpressionStatement",
															"src": "2769:52:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "1960:113:0",
										"text": " @dev Delegate your vote to the voter 'to'.\n @param to address to which vote is delegated"
									},
									"functionSelector": "5c19a95c",
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nameLocation": "2087:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2104:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2096:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2096:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:12:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2115:0:0"
									},
									"scope": 316,
									"src": "2078:907:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "3209:422:0",
										"statements": [
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3233:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 256,
														"src": "3219:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"id": 214,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 213,
																"name": "Voter",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 11,
																"src": "3219:5:0"
															},
															"referencedDeclaration": 11,
															"src": "3219:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 220,
												"initialValue": {
													"baseExpression": {
														"id": 216,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "3242:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 219,
													"indexExpression": {
														"expression": {
															"id": 217,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3249:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3249:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3242:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$11_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3219:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 222,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "3278:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																		"typeString": "struct Ballot.Voter storage pointer"
																	}
																},
																"id": 223,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "3278:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3295:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3278:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "486173206e6f20726967687420746f20766f7465",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3298:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e",
																"typeString": "literal_string \"Has no right to vote\""
															},
															"value": "Has no right to vote"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e",
																"typeString": "literal_string \"Has no right to vote\""
															}
														],
														"id": 221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3270:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3270:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "3270:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3339:13:0",
															"subExpression": {
																"expression": {
																	"id": 230,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "3340:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																		"typeString": "struct Ballot.Voter storage pointer"
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 6,
																"src": "3340:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920766f7465642e",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3354:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84",
																"typeString": "literal_string \"Already voted.\""
															},
															"value": "Already voted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84",
																"typeString": "literal_string \"Already voted.\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3331:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3331:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "3331:40:0"
											},
											{
												"expression": {
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 236,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3381:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 238,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "3381:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3396:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3381:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "3381:19:0"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 242,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3410:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "3410:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 245,
														"name": "proposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3424:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3410:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "3410:22:0"
											},
											{
												"expression": {
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 248,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "3578:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 250,
															"indexExpression": {
																"id": 249,
																"name": "proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "3588:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3578:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$16_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 15,
														"src": "3578:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 252,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3611:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "3611:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3578:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "3578:46:0"
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "2991:177:0",
										"text": " @dev Give your vote (including votes delegated to you) to proposal 'proposals[proposal].name'.\n @param proposal index of proposal in the proposals array"
									},
									"functionSelector": "0121b93f",
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nameLocation": "3182:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "proposal",
												"nameLocation": "3192:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "3187:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3187:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3186:15:0"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 316,
									"src": "3173:458:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "3904:278:0",
										"statements": [
											{
												"assignments": [
													264
												],
												"declarations": [
													{
														"constant": false,
														"id": 264,
														"mutability": "mutable",
														"name": "winningVoteCount",
														"nameLocation": "3919:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 299,
														"src": "3914:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 263,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3914:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 266,
												"initialValue": {
													"hexValue": "30",
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3938:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3914:25:0"
											},
											{
												"body": {
													"id": 297,
													"nodeType": "Block",
													"src": "3993:183:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 278,
																			"name": "proposals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 27,
																			"src": "4011:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																				"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																			}
																		},
																		"id": 280,
																		"indexExpression": {
																			"id": 279,
																			"name": "p",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 268,
																			"src": "4021:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4011:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$16_storage",
																			"typeString": "struct Ballot.Proposal storage ref"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "voteCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 15,
																	"src": "4011:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 282,
																	"name": "winningVoteCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "4036:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4011:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 296,
															"nodeType": "IfStatement",
															"src": "4007:159:0",
															"trueBody": {
																"id": 295,
																"nodeType": "Block",
																"src": "4054:112:0",
																"statements": [
																	{
																		"expression": {
																			"id": 289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 284,
																				"name": "winningVoteCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 264,
																				"src": "4072:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 285,
																						"name": "proposals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 27,
																						"src": "4091:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																							"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																						}
																					},
																					"id": 287,
																					"indexExpression": {
																						"id": 286,
																						"name": "p",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 268,
																						"src": "4101:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4091:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Proposal_$16_storage",
																						"typeString": "struct Ballot.Proposal storage ref"
																					}
																				},
																				"id": 288,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "voteCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 15,
																				"src": "4091:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4072:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 290,
																		"nodeType": "ExpressionStatement",
																		"src": "4072:41:0"
																	},
																	{
																		"expression": {
																			"id": 293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 291,
																				"name": "winningProposal_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 261,
																				"src": "4131:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 292,
																				"name": "p",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 268,
																				"src": "4150:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4131:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 294,
																		"nodeType": "ExpressionStatement",
																		"src": "4131:20:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 271,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "3966:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 272,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3970:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3970:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3966:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 298,
												"initializationExpression": {
													"assignments": [
														268
													],
													"declarations": [
														{
															"constant": false,
															"id": 268,
															"mutability": "mutable",
															"name": "p",
															"nameLocation": "3959:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 298,
															"src": "3954:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 267,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3954:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 270,
													"initialValue": {
														"hexValue": "30",
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3963:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3954:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3988:3:0",
														"subExpression": {
															"id": 275,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "3988:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 277,
													"nodeType": "ExpressionStatement",
													"src": "3988:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3949:227:0"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "3637:175:0",
										"text": " @dev Computes the winning proposal taking all previous votes into account.\n @return winningProposal_ index of winning proposal in the proposals array"
									},
									"functionSelector": "609ff1bd",
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "winningProposal",
									"nameLocation": "3826:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3841:2:0"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "winningProposal_",
												"nameLocation": "3882:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3877:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3877:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3876:23:0"
									},
									"scope": 316,
									"src": "3817:365:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "4453:64:0",
										"statements": [
											{
												"expression": {
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "winnerName_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "4463:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 307,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "4477:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 310,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 308,
																	"name": "winningProposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "4487:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4487:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4477:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$16_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 311,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "4477:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4463:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "4463:47:0"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "4188:180:0",
										"text": " @dev Calls winningProposal() function to get the index of the winner contained in the proposals array and then\n @return winnerName_ the name of the winner"
									},
									"functionSelector": "e2ba53f0",
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "winnerName",
									"nameLocation": "4382:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4392:2:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "winnerName_",
												"nameLocation": "4436:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4428:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4427:21:0"
									},
									"scope": 316,
									"src": "4373:144:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 317,
							"src": "157:4362:0",
							"usedErrors": []
						}
					],
					"src": "37:4483:0"
				},
				"id": 0
			}
		}
	}
}